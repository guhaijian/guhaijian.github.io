<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>顾海健的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://guhaijian.github.io/"/>
  <updated>2020-09-12T12:59:42.814Z</updated>
  <id>http://guhaijian.github.io/</id>
  
  <author>
    <name>guhaijian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack配置全指南</title>
    <link href="http://guhaijian.github.io/2020/09/12/webpack%E9%85%8D%E7%BD%AE%E5%85%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://guhaijian.github.io/2020/09/12/webpack%E9%85%8D%E7%BD%AE%E5%85%A8%E6%8C%87%E5%8D%97/</id>
    <published>2020-09-12T12:59:54.682Z</published>
    <updated>2020-09-12T12:59:42.814Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="webpack-基本使用步骤"><a href="#webpack-基本使用步骤" class="headerlink" title="webpack 基本使用步骤"></a>webpack 基本使用步骤</h1><ul><li>项目的初始化，目的：生成``package.json`文件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm init -y;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意点：项目（文件夹）的名字不能有中文</span></span><br></pre></td></tr></table></figure><ul><li>安装 webpack 的依赖包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D webpack webpack-cli</span><br></pre></td></tr></table></figure><ul><li>给<code>package.json</code>配置一个脚本</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">  "build": "webpack --config webpack.config.js"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在根目录创建 webpack 的配置文件<code>webpack.config.js</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主要用于提供webpack的配置，可以先什么都不写</span></span><br></pre></td></tr></table></figure><ul><li>运行命令</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意：webpack没有任何配置的情况下，会对src下的index.js进行打包。。。。所以需要提供一个Index.js文件</span></span><br></pre></td></tr></table></figure><h1 id="webpack-配置入口"><a href="#webpack-配置入口" class="headerlink" title="webpack 配置入口"></a>webpack 配置入口</h1><p>所有的 webapck 都应该配置到对象中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;&#125;</span><br></pre></td></tr></table></figure><p>通过 entry 去配置 webpack 的入口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置webpack的入口</span></span><br><span class="line">entry: <span class="string">'./src/main.js'</span></span><br></pre></td></tr></table></figure><h1 id="webpack-配置出口"><a href="#webpack-配置出口" class="headerlink" title="webpack 配置出口"></a>webpack 配置出口</h1><p>webpack 出口配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置webpack的出口</span></span><br><span class="line">output: &#123;</span><br><span class="line">  <span class="comment">// webpack的出口所在的目录，默认是dist，如果需要提供，必须是绝对路径</span></span><br><span class="line">  path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">  <span class="comment">// 出口的文件</span></span><br><span class="line">  filename: <span class="string">'bundle.js'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-配置打包模式"><a href="#webpack-配置打包模式" class="headerlink" title="webpack 配置打包模式"></a>webpack 配置打包模式</h1><p>webpack 提供了两种模式进行打包</p><p>development: 开发模式，，打包不压缩，文件大，打包速度快</p><p>production: 生产模式，打包需要压缩，文件小，打包速度慢</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mode: <span class="string">'production'</span></span><br><span class="line">mode: <span class="string">'development'</span></span><br></pre></td></tr></table></figure><h1 id="webpack-配置-html-插件生成-html"><a href="#webpack-配置-html-插件生成-html" class="headerlink" title="webpack 配置 html 插件生成 html"></a>webpack 配置 html 插件生成 html</h1><ul><li>安装依赖包</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D html-webpack-plugin</span><br></pre></td></tr></table></figure><ul><li>配置插件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"></span><br><span class="line">plugins: [<span class="keyword">new</span> HtmlWebpackPlugin(&#123; <span class="attr">template</span>: <span class="string">'./src/index.html'</span> &#125;)]</span><br></pre></td></tr></table></figure><h1 id="webpack-处理-css-文件"><a href="#webpack-处理-css-文件" class="headerlink" title="webpack 处理 css 文件"></a>webpack 处理 css 文件</h1><ul><li>安装依赖包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D css-loader style-loader</span><br></pre></td></tr></table></figure><ul><li>添加 css-loader 的配置</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    <span class="comment">// 加载css的规则</span></span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">      <span class="comment">// loader的加载顺序是从右往左加载</span></span><br><span class="line">      use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-处理-less-文件"><a href="#webpack-处理-less-文件" class="headerlink" title="webpack 处理 less 文件"></a>webpack 处理 less 文件</h1><ul><li>安装依赖包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D less-loader less</span><br></pre></td></tr></table></figure><ul><li>添加 less-loader 的规则</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载less的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">  use: [<span class="string">'style-loader'</span> ,<span class="string">'css-loader'</span>, <span class="string">'less-loader'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-处理图片"><a href="#webpack-处理图片" class="headerlink" title="webpack 处理图片"></a>webpack 处理图片</h1><ul><li>安装依赖包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D file-loader url-loader</span><br></pre></td></tr></table></figure><ul><li>配置 url-loader 的处理</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载图片的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.(png|jpg|gif)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      limit: <span class="number">10</span> * <span class="number">1024</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-处理字体图标"><a href="#webpack-处理字体图标" class="headerlink" title="webpack 处理字体图标"></a>webpack 处理字体图标</h1><blockquote><p>也是用 url-loader,和处理图片一模一样</p></blockquote><ul><li>安装依赖包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D file-loader url-loader</span><br></pre></td></tr></table></figure><ul><li>配置 url-loader 的处理</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载字体图标的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.(eot|ttf|svg|woff)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      limit: <span class="number">10</span> * <span class="number">1024</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-处理音频和视频"><a href="#webpack-处理音频和视频" class="headerlink" title="webpack 处理音频和视频"></a>webpack 处理音频和视频</h1><blockquote><p>也是用 url-loader,和处理图片一模一样</p></blockquote><ul><li>安装依赖包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D file-loader url-loader</span><br></pre></td></tr></table></figure><ul><li>配置 url-loader 的处理</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载音视频的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.(mp3|mp4|ogg)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      limit: <span class="number">10</span> * <span class="number">1024</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用-mini-css-extract-plugin-插件提取-CSS"><a href="#使用-mini-css-extract-plugin-插件提取-CSS" class="headerlink" title="使用 mini-css-extract-plugin 插件提取 CSS"></a>使用 mini-css-extract-plugin 插件提取 CSS</h1><blockquote><p>默认 webpack 会把 css 样式也打包到 bundle.js 中，缺点：项目中的样式比较多，如果都打包到一起，会导致打包的 bundle.js 文件过大。</p></blockquote><ul><li><p><a href="https://www.webpackjs.com/plugins/extract-text-webpack-plugin" target="_blank" rel="noopener">ExtractTextWebpackPlugin</a> 从 bundle 中提取文本（CSS）到单独的文件 , <strong>注意 这个插件只适用于 webpack 3.x 以前的版本</strong></p></li><li><p><a href="https://webpack.js.org/plugins/mini-css-extract-plugin/" target="_blank" rel="noopener">mini-css-extract-plugin</a> 是 webpack4.x 版本用到的一个插件，用于从 bundle 中提取文本（CSS）到单独的文件</p></li><li><p>安装依赖包</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D mini-css-extract-plugin</span><br></pre></td></tr></table></figure><ul><li>配置这个插件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MiniCssExtractPlugin = <span class="built_in">require</span>(<span class="string">'mini-css-extract-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置插件</span></span><br><span class="line">plugins: [</span><br><span class="line">  <span class="keyword">new</span> MiniCssExtractPlugin(&#123;</span><br><span class="line">    <span class="comment">// 指定生成的css文件名和路径</span></span><br><span class="line">    filename: <span class="string">'./css/index.css'</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">],</span><br></pre></td></tr></table></figure><ul><li>配置插件的 loader</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载css的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">  <span class="comment">// loader的加载顺序是从右往左加载</span></span><br><span class="line">  <span class="comment">// 把css-loader处理后的结果 不交给style-loader进行展示，交给MiniCssExtractPlugin这个插件</span></span><br><span class="line">  use: [</span><br><span class="line">    &#123;</span><br><span class="line">      loader: MiniCssExtractPlugin.loader,</span><br><span class="line">      options: &#123;</span><br><span class="line">        <span class="comment">// 指定加载资源的路径</span></span><br><span class="line">        publicPath: <span class="string">'../'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'css-loader'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 加载less的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">  use: [</span><br><span class="line">    &#123;</span><br><span class="line">      loader: MiniCssExtractPlugin.loader,</span><br><span class="line">      options: &#123;</span><br><span class="line">        <span class="comment">// 指定加载资源的路径</span></span><br><span class="line">        publicPath: <span class="string">'../'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; ,</span><br><span class="line">    <span class="string">'css-loader'</span>,</span><br><span class="line">    <span class="string">'less-loader'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="给图片和字体图标指定文件夹"><a href="#给图片和字体图标指定文件夹" class="headerlink" title="给图片和字体图标指定文件夹"></a>给图片和字体图标指定文件夹</h1><p>图片的配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载图片的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.(png|jpg|gif)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      limit: <span class="number">10</span> * <span class="number">1024</span>,</span><br><span class="line">      <span class="comment">// 指定文件的生成的名字 使用原来的名字</span></span><br><span class="line">      name: <span class="string">'[name].[ext]'</span>,</span><br><span class="line">      <span class="comment">// 指定输出目录</span></span><br><span class="line">      outputPath: <span class="string">'./images'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>字体图标的配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载字体图标的规则</span></span><br><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.(eot|ttf|svg|woff)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      limit: <span class="number">10</span> * <span class="number">1024</span>,</span><br><span class="line">      name: <span class="string">'[name].[ext]'</span>,</span><br><span class="line">      outputPath: <span class="string">'./fonts'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="配置-babel-loader-用于处理高版本的-js-语法"><a href="#配置-babel-loader-用于处理高版本的-js-语法" class="headerlink" title="配置 babel-loader 用于处理高版本的 js 语法"></a>配置 babel-loader 用于处理高版本的 js 语法</h1><blockquote><p>开发的时候，希望尽可能使用高版本的 js 语法， ES6 ES7 ES8 通过 webpack 配置 babel-loader 可以把高版本的 js 语法变成低版本的 js 语法。</p></blockquote><ul><li>安装包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D babel-loader @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure><ul><li>配置 babel-loader</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">  exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">      presets: [<span class="string">'@babel/preset-env'</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack-dev-server-的使用"><a href="#webpack-dev-server-的使用" class="headerlink" title="webpack-dev-server 的使用"></a>webpack-dev-server 的使用</h1><blockquote><p>webpack-dev-server 类似于 webpack 包,但是 webpack-dev-server 不是用于打包的，而是启动一个开发服务器，这个服务器会自多个监听代码的变化，并且自动帮我们重新打包。</p></blockquote><ul><li>安装</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server -D</span><br></pre></td></tr></table></figure><ul><li>配置一个新的脚本</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于上线打包使用</span></span><br><span class="line"><span class="string">"build"</span>: <span class="string">"webpack --config webpack.config.js"</span>,</span><br><span class="line"><span class="comment">// 用于开发环境使用</span></span><br><span class="line"><span class="string">"dev"</span>: <span class="string">"webpack-dev-server --config webpack.config.js"</span></span><br></pre></td></tr></table></figure><p>注意：千万不要使用 vscode 的自动保存功能</p><p>webpack-dev-server 的配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以自动打开浏览器</span></span><br><span class="line">open: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改服务器的端口</span></span><br><span class="line">port: <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反向代理</span></span><br><span class="line">proxy:</span><br></pre></td></tr></table></figure><h1 id="vue-的单文件组件"><a href="#vue-的单文件组件" class="headerlink" title="vue 的单文件组件"></a>vue 的单文件组件</h1><p><a href="https://cn.vuejs.org/v2/guide/single-file-components.html#ad" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/single-file-components.html#ad</a></p><h1 id="webpack-处理-vue-文件"><a href="#webpack-处理-vue-文件" class="headerlink" title="webpack 处理 vue 文件"></a>webpack 处理 vue 文件</h1><ul><li>安装依赖 vue</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue</span><br></pre></td></tr></table></figure><ul><li>src 下面提供<code>index.html</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 src 下新建<code>App.vue</code>组件作为根组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是根组件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在<code>main.js</code>中把 App 渲染为根组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入Vue</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="comment">// 导入App组件</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="comment">// 把App组件渲染到页面中</span></span><br><span class="line"><span class="comment">// 根组件的内容不由el来提供，应该有App组件来提供</span></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  <span class="comment">// 固定写法：把App组件渲染到页面</span></span><br><span class="line">  render: <span class="function"><span class="keyword">function</span> (<span class="params">createElement</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> createElement(App)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>启动项目</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>会报错</p><p><img src= "/img/loading.gif" data-src="images/image-20200310144535869.png" alt="image-20200310144535869"></p><h1 id="webpack-配置-vue-loader"><a href="#webpack-配置-vue-loader" class="headerlink" title="webpack 配置 vue-loader"></a>webpack 配置 vue-loader</h1><p><a href="https://vue-loader.vuejs.org/zh/guide/#手动设置" target="_blank" rel="noopener">https://vue-loader.vuejs.org/zh/guide/#%E6%89%8B%E5%8A%A8%E8%AE%BE%E7%BD%AE</a></p><ul><li>安装包</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D vue-loader vue-template-compiler</span><br></pre></td></tr></table></figure><ul><li>配置 vue 的 loader</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> VueLoaderPlugin = <span class="built_in">require</span>(<span class="string">'vue-loader/lib/plugin'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      <span class="comment">// ... 其它规则</span></span><br><span class="line">      &#123;</span><br><span class="line">        test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">        loader: <span class="string">'vue-loader'</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="comment">// 请确保引入这个插件！</span></span><br><span class="line">    <span class="keyword">new</span> VueLoaderPlugin()</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="webpack" scheme="http://guhaijian.github.io/categories/webpack/"/>
    
    
      <category term="webpack" scheme="http://guhaijian.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>2. 小程序商城项目(category分类页)</title>
    <link href="http://guhaijian.github.io/2020/09/12/2.%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE(category%E5%88%86%E7%B1%BB%E9%A1%B5)/"/>
    <id>http://guhaijian.github.io/2020/09/12/2.%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE(category%E5%88%86%E7%B1%BB%E9%A1%B5)/</id>
    <published>2020-09-12T12:56:42.680Z</published>
    <updated>2020-09-12T12:54:02.822Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="小程序商城项目-category-分类页"><a href="#小程序商城项目-category-分类页" class="headerlink" title="小程序商城项目(category 分类页)"></a>小程序商城项目(category 分类页)</h1><h3 id="1-category-分类页静态基本结构"><a href="#1-category-分类页静态基本结构" class="headerlink" title="1. category 分类页静态基本结构"></a>1. category 分类页静态基本结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索头部 --&gt;</span><br><span class="line">&lt;search-header&gt;&lt;&#x2F;search-header&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 分类容器 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;cates&quot;&gt;</span><br><span class="line">&lt;scroll-view class&#x3D;&quot;cates-left&quot; scroll-y&#x3D;&quot;&#123;&#123; true &#125;&#125;&quot;&gt;&lt;&#x2F;scroll-view&gt;</span><br><span class="line">&lt;scroll-view class&#x3D;&quot;cates-right&quot; scroll-y&#x3D;&quot;&#123;&#123; true &#125;&#125;&quot;&gt;&lt;&#x2F;scroll-view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;新建category.less,书写基本样式</span><br><span class="line">.cates &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: calc(100vh - 100rpx);</span><br><span class="line">  display: flex;</span><br><span class="line">  .cates-left &#123;</span><br><span class="line">    flex: 2;</span><br><span class="line">    background-color: black;</span><br><span class="line">  &#125;</span><br><span class="line">  .cates-right &#123;</span><br><span class="line">    flex: 5;</span><br><span class="line">    background-color: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;在category.json中引入组件</span><br><span class="line">&#123;</span><br><span class="line">  &quot;usingComponents&quot;: &#123;</span><br><span class="line">    &quot;search-header&quot;: &quot;&#x2F;components&#x2F;search-header&#x2F;search-header&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;navigationBarTitleText&quot;: &quot;分类&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-发送请求-保存数据"><a href="#2-发送请求-保存数据" class="headerlink" title="2. 发送请求,保存数据"></a>2. 发送请求,保存数据</h3><h4 id="在-request-js-中封装请求"><a href="#在-request-js-中封装请求" class="headerlink" title="在 request.js 中封装请求"></a>在 request.js 中封装请求</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 请求分类页的分类数据</span><br><span class="line">export function jp_requestCatesData() &#123;</span><br><span class="line">  return fetch(&#123;</span><br><span class="line">    url: &#39;&#x2F;categories&#39;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-category-js-中发送请求并保存起来"><a href="#在-category-js-中发送请求并保存起来" class="headerlink" title="在 category.js 中发送请求并保存起来"></a>在 category.js 中发送请求并保存起来</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import &#123; jp_requestCatesData &#125; from &#39;..&#x2F;..&#x2F;request&#x2F;request&#39;</span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    activeIndex: 0,</span><br><span class="line">    leftMenuData: [],</span><br><span class="line">    rightMenuData: []</span><br><span class="line">  &#125;,</span><br><span class="line">  async onLoad() &#123;</span><br><span class="line">    const res &#x3D; await jp_requestCatesData()</span><br><span class="line">    const leftMenuData &#x3D; res.map((item) &#x3D;&gt; item.cat_name)</span><br><span class="line">    const rightMenuData &#x3D; res[0].children</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      leftMenuData,</span><br><span class="line">      rightMenuData</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-得到数据-在-category-wxml-中进行渲染"><a href="#3-得到数据-在-category-wxml-中进行渲染" class="headerlink" title="3. 得到数据,在 category.wxml 中进行渲染"></a>3. 得到数据,在 category.wxml 中进行渲染</h3><h4 id="补充-category-左侧结构和样式"><a href="#补充-category-左侧结构和样式" class="headerlink" title="补充 category 左侧结构和样式"></a>补充 category 左侧结构和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view class&#x3D;&quot;cates-left&quot; scroll-y&#x3D;&quot;&#123;&#123; true &#125;&#125;&quot;&gt;</span><br><span class="line">&lt;view wx:for&#x3D;&quot;&#123;&#123; leftMenusData &#125;&#125;&quot; wx:key&#x3D;&quot;*this&quot;&gt;</span><br><span class="line">&#123;&#123; item &#125;&#125;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;scroll-view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">.cates-left &#123;</span><br><span class="line">flex: 2;</span><br><span class="line">view &#123;</span><br><span class="line">  height: 80rpx;</span><br><span class="line">  line-height: 80rpx;</span><br><span class="line">  background-color: #f4f4f4;</span><br><span class="line">  border-bottom: 1px solid #ccc;</span><br><span class="line">  border-left: 3px solid transparent;</span><br><span class="line">  text-align: center;</span><br><span class="line">  &amp;.active &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    border-left: 3px solid var(--themeColor);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="补充-category-右侧结构和样式"><a href="#补充-category-右侧结构和样式" class="headerlink" title="补充 category 右侧结构和样式"></a>补充 category 右侧结构和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view class&#x3D;&quot;cates-right&quot; scroll-y&#x3D;&quot;&#123;&#123; true &#125;&#125;&quot;&gt;</span><br><span class="line">&lt;!-- 商品头部 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;banner&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;category_banner@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;!-- 商品列表 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;list&quot; wx:for&#x3D;&quot;&#123;&#123; rightMenusData &#125;&#125;&quot; wx:key&#x3D;&quot;cat_id&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;title&quot;&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;line&quot;&gt;&#x2F;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text decode&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot;&gt;&amp;emsp;&#123;&#123; item.cat_name &#125;&#125;&amp;emsp;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;line&quot;&gt;&#x2F;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;item&quot; wx:for&#x3D;&quot;&#123;&#123; item.children &#125;&#125;&quot; wx:key&#x3D;&quot;cat_name&quot; wx:for-item&#x3D;&quot;product&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; product.cat_icon &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;text&gt;&#123;&#123; product.cat_name &#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;scroll-view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">flex: 5;</span><br><span class="line">.banner &#123;</span><br><span class="line">  padding: 20rpx;</span><br><span class="line">  image &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 180rpx;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.list &#123;</span><br><span class="line">  margin: 20rpx;</span><br><span class="line">  .title &#123;</span><br><span class="line">    height: 60rpx;</span><br><span class="line">    line-height: 60rpx;</span><br><span class="line">    text-align: center;</span><br><span class="line">    .line &#123;</span><br><span class="line">      color: #ccc;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .content &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    .item &#123;</span><br><span class="line">      width: 33.3%;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">      padding: 10rpx;</span><br><span class="line">      image &#123;</span><br><span class="line">        width: 90rpx;</span><br><span class="line">        height: 90rpx;</span><br><span class="line">      &#125;</span><br><span class="line">      text &#123;</span><br><span class="line">        font-size: 24rpx;</span><br><span class="line">        margin-top: 8rpx;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-左侧点击-右侧动态切换"><a href="#4-左侧点击-右侧动态切换" class="headerlink" title="4. 左侧点击,右侧动态切换"></a>4. 左侧点击,右侧动态切换</h3><h4 id="给左侧导航栏添加-active-类名"><a href="#给左侧导航栏添加-active-类名" class="headerlink" title="给左侧导航栏添加 active 类名"></a>给左侧导航栏添加 active 类名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class&#x3D;&quot;&#123;&#123; index &#x3D;&#x3D;&#x3D; activeIndex ? &#39;active&#39; : &#39;&#39; &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><h4 id="给左侧导航栏添加点击事件并在点击的时候通过自定义属性的方式传-id"><a href="#给左侧导航栏添加点击事件并在点击的时候通过自定义属性的方式传-id" class="headerlink" title="给左侧导航栏添加点击事件并在点击的时候通过自定义属性的方式传 id"></a>给左侧导航栏添加点击事件并在点击的时候通过自定义属性的方式传 id</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindtap&#x3D;&quot;handleItemClick&quot; data-index&#x3D;&quot;&#123;&#123; index &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><h4 id="在-category-js-中添加点击事件"><a href="#在-category-js-中添加点击事件" class="headerlink" title="在 category.js 中添加点击事件"></a>在 category.js 中添加点击事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">handleItemClick(e) &#123;</span><br><span class="line">  const index &#x3D; e.currentTarget.dataset.index</span><br><span class="line">  const rightMenusData &#x3D; this.cates[index].children</span><br><span class="line">  this.setData(&#123;</span><br><span class="line">    activeIndex: index,</span><br><span class="line">    rightMenusData</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-将数据缓存到本地-优先从本地读取-如果数据过期就清除本地的并重新从服务器获取"><a href="#5-将数据缓存到本地-优先从本地读取-如果数据过期就清除本地的并重新从服务器获取" class="headerlink" title="==5. 将数据缓存到本地,优先从本地读取,如果数据过期就清除本地的并重新从服务器获取=="></a>==5. 将数据缓存到本地,优先从本地读取,如果数据过期就清除本地的并重新从服务器获取==</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">async onLoad()&#123;</span><br><span class="line">  &#x2F;&#x2F;做一个判断,优先从本地取数据,如果本地有,就用本地的</span><br><span class="line">  const localData &#x3D; wx.getStrongSync(&#39;cates&#39;)</span><br><span class="line">  if(loaclData)&#123;</span><br><span class="line">      &#x2F;&#x2F;再做一个判断,就算本地有数据,也不一定要用,要看是否过期,所以存的时候要传个时间戳</span><br><span class="line">      const isLate &#x3D; +new Data() - localData.time &gt; 60*10*1000</span><br><span class="line">      if(isLate)&#123;</span><br><span class="line">          await this.getCategory()</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">          this.cates &#x3D; loacalData.data</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">      await this.getCategoryData()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#x2F;&#x2F;拿到数据保存一下</span><br><span class="line">    const leftMenusData &#x3D; this.cates.map((item) &#x3D;&gt; item.cat_name)</span><br><span class="line">    const rightMenusData &#x3D; this.cates[0].children</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      leftMenusData,</span><br><span class="line">      rightMenusData</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F;封装数据缓存方法</span><br><span class="line">    async getCategoryData()&#123;</span><br><span class="line">    &#x2F;&#x2F;加载消息提示</span><br><span class="line">        wx.showLoading(&#123;</span><br><span class="line">            title: &#39;加载中&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">        const res &#x3D; await jp_requestCatesData()</span><br><span class="line">        this.cates &#x3D; res</span><br><span class="line">        &#x2F;&#x2F;将数据缓存到本地</span><br><span class="line">        wx.setStorageSync(&#39;cates&#39;,&#123;</span><br><span class="line">            data:res,</span><br><span class="line">            time:+new Date()</span><br><span class="line">        &#125;)</span><br><span class="line">        wx.hideLoading()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-在-category-中点击商品会进入列表页"><a href="#6-在-category-中点击商品会进入列表页" class="headerlink" title="6. 在 category 中点击商品会进入列表页"></a>6. 在 category 中点击商品会进入列表页</h3><h4 id="跳转的时候要携带参数"><a href="#跳转的时候要携带参数" class="headerlink" title="跳转的时候要携带参数"></a>跳转的时候要携带参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;content&quot;&gt;</span><br><span class="line">&lt;navigator</span><br><span class="line">class&#x3D;&quot;item&quot;</span><br><span class="line">wx:for&#x3D;&quot;&#123;&#123; item.children &#125;&#125;&quot;</span><br><span class="line">wx:key&#x3D;&quot;cat_name&quot;</span><br><span class="line">wx:for-item&#x3D;&quot;product&quot;</span><br><span class="line">open-type&#x3D;&quot;navigate&quot;</span><br><span class="line">url&#x3D;&quot;&#x2F;pages&#x2F;list&#x2F;list?cat_id&#x3D;&#123;&#123;product.cat_id&#125;&#125;&amp;cat_name&#x3D;&#123;&#123;product.cat_name&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; product.cat_icon &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;text&gt;&#123;&#123; product.cat_name &#125;&#125;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;navigator&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure><h4 id="在-list-js-中接受携带过来的参数并保存起来"><a href="#在-list-js-中接受携带过来的参数并保存起来" class="headerlink" title="在 list.js 中接受携带过来的参数并保存起来"></a>在 list.js 中接受携带过来的参数并保存起来</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">onLoad(query) &#123;</span><br><span class="line">  const &#123; cat_id, cat_name &#125; &#x3D; query</span><br><span class="line">  this.cat_id &#x3D; cat_id</span><br><span class="line">  wx.setNavigationBarTitle(&#123;</span><br><span class="line">    title: cat_name</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-list-页面中-tab-栏的封装"><a href="#7-list-页面中-tab-栏的封装" class="headerlink" title="7. list 页面中 tab 栏的封装"></a>7. list 页面中 tab 栏的封装</h3><h4 id="在-list-中注册-tab-和-search-header-组件"><a href="#在-list-中注册-tab-和-search-header-组件" class="headerlink" title="在 list 中注册 tab 和 search-header 组件"></a>在 list 中注册 tab 和 search-header 组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;usingComponents&quot;: &#123;</span><br><span class="line">    &quot;search-header&quot;: &quot;&#x2F;components&#x2F;search-header&#x2F;search-header&quot;,</span><br><span class="line">    &quot;tab&quot;:&quot;&#x2F;components&#x2F;tab&#x2F;tab&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-list-js-中设置-tab-栏的数据"><a href="#在-list-js-中设置-tab-栏的数据" class="headerlink" title="在 list.js 中设置 tab 栏的数据"></a>在 list.js 中设置 tab 栏的数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  tabs: [</span><br><span class="line">    &#123; id: 1, title: &#39;综合&#39;, isActive: true &#125;,</span><br><span class="line">    &#123; id: 2, title: &#39;销量&#39;, isActive: false &#125;,</span><br><span class="line">    &#123; id: 3, title: &#39;价格&#39;, isActive: false &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-list-中使用组件-并通过父传子将数据传给子组件"><a href="#在-list-中使用组件-并通过父传子将数据传给子组件" class="headerlink" title="在 list 中使用组件,并通过父传子将数据传给子组件"></a>在 list 中使用组件,并通过父传子将数据传给子组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;search-header&gt;&lt;&#x2F;search-header&gt;</span><br><span class="line">&lt;!-- 父传子 --&gt;</span><br><span class="line">&lt;tab tabs&#x3D;&quot;&#123;&#123;tabs&#125;&#125;&quot;&gt;&lt;&#x2F;tab&gt;</span><br></pre></td></tr></table></figure><h4 id="在子组件-tab-中的-properties-中进行接收"><a href="#在子组件-tab-中的-properties-中进行接收" class="headerlink" title="在子组件 tab 中的 properties 中进行接收"></a>在子组件 tab 中的 properties 中进行接收</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">properties: &#123;</span><br><span class="line">  tabs: &#123;</span><br><span class="line">    type: Array,</span><br><span class="line">    value: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="tab-组在接收到父组件传过来的数据后在-tab-wxml-中进行遍历渲染"><a href="#tab-组在接收到父组件传过来的数据后在-tab-wxml-中进行遍历渲染" class="headerlink" title="tab 组在接收到父组件传过来的数据后在 tab.wxml 中进行遍历渲染"></a>tab 组在接收到父组件传过来的数据后在 tab.wxml 中进行遍历渲染</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;tabs&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;tabs-item &#123;&#123;item.isActive?&#39;active&#39;:&#39;&#39;&#125;&#125;&quot; wx:for&#x3D;&quot;&#123;&#123;tabs&#125;&#125;&quot; wx:key&#x3D;&quot;id&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure><h3 id="8-tab-栏点击高亮"><a href="#8-tab-栏点击高亮" class="headerlink" title="==8. tab 栏点击高亮=="></a>==8. tab 栏点击高亮==</h3><h4 id="在-tab-wxml-中通过子传父的形式来传递参数"><a href="#在-tab-wxml-中通过子传父的形式来传递参数" class="headerlink" title="在 tab.wxml 中通过子传父的形式来传递参数"></a>在 tab.wxml 中通过子传父的形式来传递参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;tabs&quot;&gt;</span><br><span class="line">&lt;view</span><br><span class="line">class&#x3D;&quot;tabs-item &#123;&#123;item.isActive?&#39;active&#39;:&#39;&#39;&#125;&#125;</span><br><span class="line">wx:for&#x3D;&quot;&#123;&#123;tabs&#125;&#125;&quot;</span><br><span class="line">wx:key&#x3D;&quot;id&quot;</span><br><span class="line">&#x2F;&#x2F;给子组件注册点击事件,让父组件注册对应事件并修改样式</span><br><span class="line">bindtap&#x3D;&quot;handleItemClick&quot;</span><br><span class="line">&#x2F;&#x2F;自定义属性</span><br><span class="line">data-id&#x3D;&quot;&#123;&#123;item.id&#125;&#125;&quot;</span><br><span class="line">&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure><h4 id="在-tab-js-中注册事件"><a href="#在-tab-js-中注册事件" class="headerlink" title="在 tab.js 中注册事件"></a>在 tab.js 中注册事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">  handleItemClick(e) &#123;</span><br><span class="line">    &#x2F;&#x2F;获取触发事件的id</span><br><span class="line">    const id &#x3D; e.currentTarget.dataset.id</span><br><span class="line">    &#x2F;&#x2F;子传父,将id传递到父组件,让父组件修改对应id的高亮状态</span><br><span class="line">    this.triggerEvent(&#39;tabchange&#39;, id)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在父组件-list-wxml-中绑定对应事件"><a href="#在父组件-list-wxml-中绑定对应事件" class="headerlink" title="在父组件 list.wxml 中绑定对应事件"></a>在父组件 list.wxml 中绑定对应事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;search-header&gt;&lt;&#x2F;search-header&gt;</span><br><span class="line">&lt;!-- 父传子 --&gt;</span><br><span class="line">&lt;tab tabs&#x3D;&quot;&#123;&#123;tabs&#125;&#125;&quot; bindtabchange&#x3D;&quot;handleTabChange&quot;&gt;&lt;&#x2F;tab&gt;</span><br></pre></td></tr></table></figure><h4 id="在父组件-list-js-中注册对应事件"><a href="#在父组件-list-js-中注册对应事件" class="headerlink" title="在父组件 list.js 中注册对应事件"></a>在父组件 list.js 中注册对应事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">handleTabChange(e)&#123;</span><br><span class="line">    &#x2F;&#x2F;当不清楚e里面的值时可以console.log(e)一下</span><br><span class="line">    const id &#x3D; e.detail</span><br><span class="line">    const newTabs &#x3D; [...this.data.tabs]</span><br><span class="line">    &#x2F;&#x2F;遍历数组,将对应id改成他true,其他改成false</span><br><span class="line">    newTabs.forEach((item) &#x3D;&gt; &#123;</span><br><span class="line">      if (item.id &#x3D;&#x3D;&#x3D; id) &#123;</span><br><span class="line">        item.isActive &#x3D; true</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        item.isActive &#x3D; false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F;更新到data中</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      tabs: newTabs</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="父组件-tab-栏底下的商品列表要跟着高亮的-tab-进行切换"><a href="#父组件-tab-栏底下的商品列表要跟着高亮的-tab-进行切换" class="headerlink" title="父组件 tab 栏底下的商品列表要跟着高亮的 tab 进行切换"></a>父组件 tab 栏底下的商品列表要跟着高亮的 tab 进行切换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 内容部分 --&gt;</span><br><span class="line">&lt;view wx:if&#x3D;&quot;&#123;&#123; tabs[0].isActive &#125;&#125;&quot;&gt;综合部分&lt;&#x2F;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 销量部分 --&gt;</span><br><span class="line">&lt;view wx:if&#x3D;&quot;&#123;&#123; tabs[1].isActive &#125;&#125;&quot;&gt;销量部分&lt;&#x2F;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 价格部分 --&gt;</span><br><span class="line">&lt;view wx:if&#x3D;&quot;&#123;&#123; tabs[2].isActive &#125;&#125;&quot;&gt;价格部分&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure><h3 id="9-请求-list-列表数据"><a href="#9-请求-list-列表数据" class="headerlink" title="9. 请求 list 列表数据"></a>9. 请求 list 列表数据</h3><h4 id="在-request-js-中封装请求方法"><a href="#在-request-js-中封装请求方法" class="headerlink" title="在 request.js 中封装请求方法"></a>在 request.js 中封装请求方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 5. 请求列表页的列表数据</span><br><span class="line">export function jp_requestListData(cid, pagenum &#x3D; 1, pagesize &#x3D; 10) &#123;</span><br><span class="line">  return fetch(&#123;</span><br><span class="line">    url: &#39;&#x2F;goods&#x2F;search&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      cid,&#x2F;&#x2F;分类id</span><br><span class="line">      pagenum,&#x2F;&#x2F;页码</span><br><span class="line">      pagesize&#x2F;&#x2F;页容量</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="发送请求渲染数据"><a href="#发送请求渲染数据" class="headerlink" title="发送请求渲染数据"></a>发送请求渲染数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;在list.js中导入发送请求的方法</span><br><span class="line">import &#123; jp_requestListData &#125; from &#39;..&#x2F;..&#x2F;request&#x2F;request&#39;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;发送请求,获取数据</span><br><span class="line">  onLoad(query) &#123;</span><br><span class="line">  &#x2F;&#x2F;query是跳转时传过来的参数</span><br><span class="line">    &#x2F;&#x2F; console.log(query)</span><br><span class="line">    const &#123; cat_id, cat_name &#125; &#x3D; query</span><br><span class="line">    this.cat_id &#x3D; cat_id</span><br><span class="line">    &#x2F;&#x2F;设置标题</span><br><span class="line">    wx.setNavigationBarTitle(&#123;</span><br><span class="line">      title: cat_name</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F;请求列表页数据</span><br><span class="line">    this.getListData()</span><br><span class="line">  &#125;,</span><br><span class="line">  async getListData() &#123;</span><br><span class="line">    const res &#x3D; await jp_requestListData(this.cat_id)</span><br><span class="line">    &#x2F;&#x2F; console.log(res)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="微信小程序" scheme="http://guhaijian.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://guhaijian.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>1. 小程序商城项目(index 首页)</title>
    <link href="http://guhaijian.github.io/2020/09/12/1.%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE(index%E9%A6%96%E9%A1%B5)/"/>
    <id>http://guhaijian.github.io/2020/09/12/1.%20%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE(index%E9%A6%96%E9%A1%B5)/</id>
    <published>2020-09-12T12:56:42.669Z</published>
    <updated>2020-09-12T12:54:04.277Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="小程序商城项目-index-首页"><a href="#小程序商城项目-index-首页" class="headerlink" title="小程序商城项目(index 首页)"></a>小程序商城项目(index 首页)</h1><h3 id="1-在-app-json-中进行全局配置"><a href="#1-在-app-json-中进行全局配置" class="headerlink" title="1. 在 app.json 中进行全局配置"></a>1. 在 app.json 中进行全局配置</h3><h4 id="删除默认页-创建项目中的-pages"><a href="#删除默认页-创建项目中的-pages" class="headerlink" title="删除默认页,创建项目中的 pages"></a>删除默认页,创建项目中的 pages</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;pages&quot;: [</span><br><span class="line">  &quot;pages&#x2F;index&#x2F;index&quot;,</span><br><span class="line">  &quot;pages&#x2F;category&#x2F;category&quot;,</span><br><span class="line">  &quot;pages&#x2F;cart&#x2F;cart&quot;,</span><br><span class="line">  &quot;pages&#x2F;user&#x2F;user&quot;,</span><br><span class="line">  &quot;pages&#x2F;list&#x2F;list&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="配置全局-windows"><a href="#配置全局-windows" class="headerlink" title="配置全局 windows"></a>配置全局 windows</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;window&quot;: &#123;</span><br><span class="line">  &quot;navigationBarBackgroundColor&quot;: &quot;#ff2d4f&quot;,</span><br><span class="line">  &quot;navigationBarTitleText&quot;: &quot;品优购&quot;,</span><br><span class="line">  &quot;navigationBarTextStyle&quot;: &quot;white&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建-tabBar"><a href="#创建-tabBar" class="headerlink" title="创建 tabBar"></a>创建 tabBar</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&quot;tabBar&quot;: &#123;</span><br><span class="line">&#x2F;&#x2F;选中图标时的字体颜色</span><br><span class="line">  &quot;selectedColor&quot;: &quot;#ff2d4a&quot;,</span><br><span class="line">  &quot;list&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;index&#x2F;index&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;首页&quot;,</span><br><span class="line">      &quot;iconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-home.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-home-active.png&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;category&#x2F;category&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;分类&quot;,</span><br><span class="line">      &quot;iconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-category.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-category-active.png&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;cart&#x2F;cart&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;购物车&quot;,</span><br><span class="line">      &quot;iconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-cart.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-cart-active.png&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages&#x2F;user&#x2F;user&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;我的&quot;,</span><br><span class="line">      &quot;iconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-user.png&quot;,</span><br><span class="line">      &quot;selectedIconPath&quot;: &quot;&#x2F;assets&#x2F;images&#x2F;icon-user-active.png&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="给每个页面配置-navigationBarTitleText"><a href="#给每个页面配置-navigationBarTitleText" class="headerlink" title="给每个页面配置 navigationBarTitleText"></a>给每个页面配置 navigationBarTitleText</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;usingComponents&quot;: &#123;&#125;,</span><br><span class="line">    &quot;navigationBarTitleText&quot;: &quot;首页&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-project-config-json-中配置-setting-关闭警告"><a href="#在-project-config-json-中配置-setting-关闭警告" class="headerlink" title="在 project.config.json 中配置 setting,关闭警告"></a>在 project.config.json 中配置 setting,关闭警告</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;setting&quot;:&#123;</span><br><span class="line">  &quot;checkSiteMap&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-在-app-wxss-中进行全局默认样式配置"><a href="#2-在-app-wxss-中进行全局默认样式配置" class="headerlink" title="2. 在 app.wxss 中进行全局默认样式配置"></a>2. 在 app.wxss 中进行全局默认样式配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 小程序中 不支持通配符 *&#x2F;</span><br><span class="line">page,view,text,swiper,swiper-item,image,navigator &#123;</span><br><span class="line">  padding: 0;</span><br><span class="line">  margin: 0;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">image &#123;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-index-首页静态页面书写"><a href="#3-index-首页静态页面书写" class="headerlink" title="3. index 首页静态页面书写"></a>3. index 首页静态页面书写</h3><h4 id="轮播图静态结构和样式"><a href="#轮播图静态结构和样式" class="headerlink" title="轮播图静态结构和样式"></a>轮播图静态结构和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 轮播图 --&gt;</span><br><span class="line">&lt;swiper circular&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot; indicator-dots&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot; autoplay&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot; interval&#x3D;&quot;&#123;&#123;3000&#125;&#125;&quot; duration&#x3D;&quot;&#123;&#123;1000&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;swiper-item&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;banner1.png&quot; mode&#x3D;&quot;aspectFill&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;swiper-item&gt;</span><br><span class="line">&lt;swiper-item&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;banner2.png&quot; mode&#x3D;&quot;aspectFill&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;swiper-item&gt;</span><br><span class="line">&lt;swiper-item&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;banner3.png&quot; mode&#x3D;&quot;aspectFill&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;swiper-item&gt;</span><br><span class="line">&lt;swiper-item&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;banner4.png&quot; mode&#x3D;&quot;aspectFill&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;swiper-item&gt;</span><br><span class="line">&lt;&#x2F;swiper&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;在index.less文件中书写轮播图样式</span><br><span class="line">swiper &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 340rpx;</span><br><span class="line">  image &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 340rpx;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="菜单导航静态结构和样式"><a href="#菜单导航静态结构和样式" class="headerlink" title="菜单导航静态结构和样式"></a>菜单导航静态结构和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 菜单导航 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus-item&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;icon_index_nav_1@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus-item&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;icon_index_nav_2@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus-item&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;icon_index_nav_3@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus-item&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;icon_index_nav_4@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;在index.less文件中书写菜单导航样式</span><br><span class="line">.menus &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-around;</span><br><span class="line">  padding-top: 24rpx;</span><br><span class="line">  padding-bottom: 29rpx;</span><br><span class="line">  .menus-item &#123;</span><br><span class="line">    image &#123;</span><br><span class="line">      width: 128rpx;</span><br><span class="line">      height: 128rpx;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="商品楼层静态结构和样式"><a href="#商品楼层静态结构和样式" class="headerlink" title="商品楼层静态结构和样式"></a>商品楼层静态结构和样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 楼层 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor&quot;&gt;</span><br><span class="line">&lt;!-- 标题 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor-title&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_title.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;!-- 主题 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor-body&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;left&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_1@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;right&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_2@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_3@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_4@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#x2F;assets&#x2F;upload&#x2F;pic_floor01_5@2x.png&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;在index.less文件中书写楼层样式</span><br><span class="line">.floor &#123;</span><br><span class="line">  .floor-title &#123;</span><br><span class="line">    background-color: #f4f4f4;</span><br><span class="line">    padding-top: 30rpx;</span><br><span class="line">    image &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 59rpx;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .floor-body &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    padding: 20rpx 16rpx;</span><br><span class="line">    .left &#123;</span><br><span class="line">      height: 386rpx;</span><br><span class="line">      padding-right: 10rpx;</span><br><span class="line">      image &#123;</span><br><span class="line">        width: 232rpx;</span><br><span class="line">        height: 386rpx;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .right &#123;</span><br><span class="line">      height: 386rpx;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">      align-content: space-between;</span><br><span class="line">      image &#123;</span><br><span class="line">        width: 233rpx;</span><br><span class="line">        height: 188rpx;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-封装搜索框组件并在-index-中使用"><a href="#4-封装搜索框组件并在-index-中使用" class="headerlink" title="4. 封装搜索框组件并在 index 中使用"></a>4. 封装搜索框组件并在 index 中使用</h3><h4 id="在跟目录新建-styles-文件夹-并引入一份-iconfont-wxss-文件"><a href="#在跟目录新建-styles-文件夹-并引入一份-iconfont-wxss-文件" class="headerlink" title="在跟目录新建 styles 文件夹,并引入一份 iconfont.wxss 文件"></a>在跟目录新建 styles 文件夹,并引入一份 iconfont.wxss 文件</h4><h4 id="在-app-wxss-中移入字体图标-这样所有的页面就都能使用了"><a href="#在-app-wxss-中移入字体图标-这样所有的页面就都能使用了" class="headerlink" title="在 app.wxss 中移入字体图标,这样所有的页面就都能使用了"></a>在 app.wxss 中移入字体图标,这样所有的页面就都能使用了</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@import &#39;.&#x2F;styles&#x2F;iconfont.wxss&#39;;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;添加一个全局样式</span><br><span class="line">page &#123;</span><br><span class="line">  --themeColor: #ff2d4a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-components-中新建-search-header-组件并引入字体图标"><a href="#在-components-中新建-search-header-组件并引入字体图标" class="headerlink" title="在 components 中新建 search-header 组件并引入字体图标"></a>在 components 中新建 search-header 组件并引入字体图标</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;在search-header.wxml中写静态结构</span><br><span class="line">&lt;view class&#x3D;&quot;search-header&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;search-bar&quot;&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;iconfont icon-search&quot;&gt;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;search&quot;&gt;搜索&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&#x2F;&#x2F;在search-header.less中写静态样式</span><br><span class="line">&#x2F;&#x2F;组件中需要使用字体图标的话需要单独引入字体图标库</span><br><span class="line">@import &#39;..&#x2F;..&#x2F;styles&#x2F;iconfont.wxss&#39;;</span><br><span class="line">.search-header &#123;</span><br><span class="line">  padding: 20rpx 16rpx;</span><br><span class="line">  &#x2F;&#x2F;--themeColor需要在app.wxss全局样式中定义</span><br><span class="line">  background-color: var(--themeColor);</span><br><span class="line">  .search-bar &#123;</span><br><span class="line">    height: 60rpx;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    border-radius: 10rpx;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    color: #666;</span><br><span class="line">    .search &#123;</span><br><span class="line">      color: #666;</span><br><span class="line">      font-size: 32rpx;</span><br><span class="line">      margin-left: 10rpx;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-index-json-中引入搜索框组件"><a href="#在-index-json-中引入搜索框组件" class="headerlink" title="在 index.json 中引入搜索框组件"></a>在 index.json 中引入搜索框组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;usingComponents&quot;: &#123;</span><br><span class="line">    &quot;search-header&quot;: &quot;&#x2F;components&#x2F;search-header&#x2F;search-header&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;navigationBarTitleText&quot;: &quot;首页&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-index-wxml-顶部引入搜索框组件"><a href="#在-index-wxml-顶部引入搜索框组件" class="headerlink" title="在 index.wxml 顶部引入搜索框组件"></a>在 index.wxml 顶部引入搜索框组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索头部 --&gt;</span><br><span class="line">&lt;search-header&gt;&lt;&#x2F;search-header&gt;</span><br></pre></td></tr></table></figure><h3 id="5-回到顶部按钮功能"><a href="#5-回到顶部按钮功能" class="headerlink" title="5. 回到顶部按钮功能"></a>5. 回到顶部按钮功能</h3><h4 id="固定定位配置静态结构"><a href="#固定定位配置静态结构" class="headerlink" title="固定定位配置静态结构"></a>固定定位配置静态结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;top&quot; hidden&#x3D;&quot;&#123;&#123;isHidden&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;iconfont icon-go-top&quot;&gt;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text&gt;顶部&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">.top &#123;</span><br><span class="line">  width: 100rpx;</span><br><span class="line">  height: 100rpx;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">  background-color: skyblue;</span><br><span class="line"></span><br><span class="line">  position: fixed;</span><br><span class="line">  right: 20rpx;</span><br><span class="line">  bottom: 20rpx;</span><br><span class="line"></span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="监听滚动卷曲距离"><a href="#监听滚动卷曲距离" class="headerlink" title="监听滚动卷曲距离"></a>监听滚动卷曲距离</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">onPageScroll(e) &#123;</span><br><span class="line"> if (e.scrollTop &gt;&#x3D; 300)  &#123;</span><br><span class="line">   this.setData(&#123;</span><br><span class="line">    isHidden: false</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125; else &#123;</span><br><span class="line">   this.setData(&#123;</span><br><span class="line">    isHidden: true</span><br><span class="line">   &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置点击事件回到顶部"><a href="#设置点击事件回到顶部" class="headerlink" title="设置点击事件回到顶部"></a>设置点击事件回到顶部</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class&#x3D;&quot;top&quot; hidden&#x3D;&quot;&#123;&#123;isHidden&#125;&#125;&quot; bindtap&#x3D;&quot;goTop&quot;&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;iconfont icon-go-top&quot;&gt;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text&gt;顶部&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;在index.js中注册点击事件</span><br><span class="line">goTop() &#123;</span><br><span class="line"> wx.pageScrollTo(&#123;</span><br><span class="line">  scrollTop: 0</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-新建-request-文件夹并封装-fetch-js-和-request-js-发送请求的文件"><a href="#6-新建-request-文件夹并封装-fetch-js-和-request-js-发送请求的文件" class="headerlink" title="6. 新建 request 文件夹并封装 fetch.js 和 request.js 发送请求的文件"></a>6. 新建 request 文件夹并封装 fetch.js 和 request.js 发送请求的文件</h3><h4 id="封装-fetch-js"><a href="#封装-fetch-js" class="headerlink" title="封装 fetch.js"></a>封装 fetch.js</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 默认小程序提供的request方法, 回调的形式, 不好用, 所以我们需要进行promise处理</span><br><span class="line">const baseURL &#x3D; &#39;https:&#x2F;&#x2F;api-hmugo-web.itheima.net&#x2F;api&#x2F;public&#x2F;v1&#39;</span><br><span class="line">function fetch(options) &#123;</span><br><span class="line">  return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      method: options.method || &#39;get&#39;,</span><br><span class="line">      url: baseURL + options.url,</span><br><span class="line">      data: options.data || &#123;&#125;,</span><br><span class="line">      header: options.header || &#123;&#125;,</span><br><span class="line">      dataType: options.dataType || &#39;json&#39;,</span><br><span class="line">      success: (res) &#x3D;&gt; &#123;</span><br><span class="line">        const &#123; meta, message &#125; &#x3D; res.data</span><br><span class="line">        if (meta.status &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">          resolve(message)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: (err) &#x3D;&gt; &#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">export default fetch</span><br></pre></td></tr></table></figure><h4 id="封装-request-js-用于发送请求"><a href="#封装-request-js-用于发送请求" class="headerlink" title="封装 request.js,用于发送请求"></a>封装 request.js,用于发送请求</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 封装页面中需要的请求函数</span><br><span class="line">import fetch from &#39;.&#x2F;fetch&#39;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 1. 请求轮播图的数据</span><br><span class="line">export function jp_requestSwiperData() &#123;</span><br><span class="line">  return fetch(&#123;</span><br><span class="line">    url: &#39;&#x2F;home&#x2F;swiperdata&#39;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 2. 请求导航的数据</span><br><span class="line">export function jp_requestNavData() &#123;</span><br><span class="line">  return fetch(&#123;</span><br><span class="line">    url: &#39;&#x2F;home&#x2F;catitems&#39;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 3. 请求楼层的数据</span><br><span class="line">export function jp_requestFloorData() &#123;</span><br><span class="line">  return fetch(&#123;</span><br><span class="line">    url: &#39;&#x2F;home&#x2F;floordata&#39;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-在-index-js-中发送请求"><a href="#7-在-index-js-中发送请求" class="headerlink" title="7. 在 index.js 中发送请求"></a>7. 在 index.js 中发送请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import &#123;</span><br><span class="line">  jp_requestSwiperData,</span><br><span class="line">  jp_requestNavData,</span><br><span class="line">  jp_requestFloorData</span><br><span class="line">&#125; from &#39;..&#x2F;..&#x2F;request&#x2F;request&#39;</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    isHidden: true,</span><br><span class="line">    swiperData: [],</span><br><span class="line">    navData: [],</span><br><span class="line">    floorData: []</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad() &#123;</span><br><span class="line">    this.getSwiperData()</span><br><span class="line">    this.getNavData()</span><br><span class="line">    this.getFloorData()</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 获取轮播图数据</span><br><span class="line">  async getSwiperData() &#123;</span><br><span class="line">    const res &#x3D; await jp_requestSwiperData()</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      swiperData: res</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 获取导航的数据</span><br><span class="line">  async getNavData() &#123;</span><br><span class="line">    const res &#x3D; await jp_requestNavData()</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      navData: res</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 获取楼层的数据</span><br><span class="line">  async getFloorData() &#123;</span><br><span class="line">    const res &#x3D; await jp_requestFloorData()</span><br><span class="line">    &#x2F;&#x2F; 给res循环一下, 给每一项, 添加一个id</span><br><span class="line">    res.forEach((item, index) &#x3D;&gt; &#123;</span><br><span class="line">      item.floorid &#x3D; index + 1</span><br><span class="line">    &#125;)</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      floorData: res</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  onPageScroll(e) &#123;</span><br><span class="line">    &#x2F;&#x2F; console.log(e.scrollTop)</span><br><span class="line">    if (e.scrollTop &gt;&#x3D; 300) &#123;</span><br><span class="line">      this.setData(&#123;</span><br><span class="line">        isHidden: false</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      this.setData(&#123;</span><br><span class="line">        isHidden: true</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  goTop() &#123;</span><br><span class="line">    wx.pageScrollTo(&#123;</span><br><span class="line">      scrollTop: 0</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="8-渲染-index-页面"><a href="#8-渲染-index-页面" class="headerlink" title="8. 渲染 index 页面"></a>8. 渲染 index 页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 搜索头部 --&gt;</span><br><span class="line">&lt;search-header&gt;&lt;&#x2F;search-header&gt;</span><br><span class="line">&lt;!-- 轮播图 --&gt;</span><br><span class="line">&lt;swiper indicator-dots&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot; autoplay&#x3D;&quot;&#123;&#123;true&#125;&#125;&quot; interval&#x3D;&quot;&#123;&#123;4000&#125;&#125;&quot; duration&#x3D;&quot;&#123;&#123;500&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;swiper-item wx:for&#x3D;&quot;&#123;&#123; swiperData&#125;&#125;&quot; wx:key&#x3D;&quot;goods_id&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123;item.image_src&#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;swiper-item&gt;</span><br><span class="line">&lt;&#x2F;swiper&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 菜单导航 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;menus-item&quot; wx:for&#x3D;&quot;&#123;&#123; navData &#125;&#125;&quot; wx:key&#x3D;&quot;name&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123;item.image_src&#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 楼层 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor&quot; wx:for&#x3D;&quot;&#123;&#123;floorData&#125;&#125;&quot; wx:key&#x3D;&quot;floorid&gt;</span><br><span class="line">&lt;!-- 标题 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor-title&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123;item.floor_title.image_src&#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;!-- 主题 --&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;floor-body&quot;&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;left&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; item.product_list[0].image_src &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;view class&#x3D;&quot;right&quot;&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; item.product_list[1].image_src &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; item.product_list[2].image_src &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; item.product_list[3].image_src &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;image src&#x3D;&quot;&#123;&#123; item.product_list[4].image_src &#125;&#125;&quot;&gt;&lt;&#x2F;image&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 回到顶部盒子 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class&#x3D;&quot;top&quot; hidden&#x3D;&quot;&#123;&#123;isHidden&#125;&#125;&quot; bindtap&#x3D;&quot;goTop&quot;&gt;</span><br><span class="line">&lt;text class&#x3D;&quot;iconfont icon-go-top&quot;&gt;&lt;&#x2F;text&gt;</span><br><span class="line">&lt;text&gt;顶部&lt;&#x2F;text&gt;</span><br><span class="line">&lt;&#x2F;view&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="微信小程序" scheme="http://guhaijian.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://guhaijian.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>4. 从零开始新闻头条(Profile个人中心)</title>
    <link href="http://guhaijian.github.io/2020/09/12/4.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Profile%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83)/"/>
    <id>http://guhaijian.github.io/2020/09/12/4.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Profile%E4%B8%AA%E4%BA%BA%E4%B8%AD%E5%BF%83)/</id>
    <published>2020-09-12T12:44:30.595Z</published>
    <updated>2020-09-17T00:02:31.710Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="从零开始新闻头条-Profile-个人中心"><a href="#从零开始新闻头条-Profile-个人中心" class="headerlink" title="从零开始新闻头条(Profile 个人中心)"></a>从零开始新闻头条(Profile 个人中心)</h1><h3 id="1-准备-Profile-个人中心基础样式和模板"><a href="#1-准备-Profile-个人中心基础样式和模板" class="headerlink" title="1. 准备 Profile 个人中心基础样式和模板"></a>1. 准备 Profile 个人中心基础样式和模板</h3><h4 id="template-模板"><a href="#template-模板" class="headerlink" title="template 模板"></a>template 模板</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;profile&quot;&gt;</span><br><span class="line">    &lt;!-- 头部信息 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;user-info&quot;&gt;</span><br><span class="line">      &lt;!-- 头像 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;avatar&quot;&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;~assets&#x2F;狗哥.jpg&quot; alt &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- 信息 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;info&quot;&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;name&quot;&gt;</span><br><span class="line">          &lt;i class&#x3D;&quot;iconfont iconxingbienan&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">          &lt;span&gt;狗哥&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;time&quot;&gt;2020-10-10&lt;&#x2F;p&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;!-- 右箭头 --&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;icon&quot;&gt;</span><br><span class="line">        &lt;i class&#x3D;&quot;iconfont iconjiantou1&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 下面信息 --&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;list&quot;&gt;</span><br><span class="line">      &lt;hm-nav&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><h4 id="style-样式"><a href="#style-样式" class="headerlink" title="style 样式"></a>style 样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.profile &#123;</span><br><span class="line">  .user-info &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    border-bottom: 3px solid #ccc;</span><br><span class="line">    .avatar &#123;</span><br><span class="line">      width: 70px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .info &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      p &#123;</span><br><span class="line">        height: 25px;</span><br><span class="line">        line-height: 25px;</span><br><span class="line">      &#125;</span><br><span class="line">      .name &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #000;</span><br><span class="line">        i &#123;</span><br><span class="line">          color: #7bbcec;</span><br><span class="line">          margin-right: 5px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      .time &#123;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .icon &#123;</span><br><span class="line">      width: 30px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      line-height: 70px;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-封装全局-hm-nav-组件"><a href="#2-封装全局-hm-nav-组件" class="headerlink" title="2. 封装全局 hm-nav 组件"></a>2. 封装全局 hm-nav 组件</h3><h4 id="封装-hm-nav-导航栏"><a href="#封装-hm-nav-导航栏" class="headerlink" title="封装 hm-nav 导航栏"></a>封装 hm-nav 导航栏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-nav&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;left&quot;&gt;我的关注&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;center&quot;&gt;关注用户&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;right&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconjiantou1&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.hm-nav &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  padding: 0 10px;</span><br><span class="line">  border-bottom: 1px solid #ccc;</span><br><span class="line">  .left &#123;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    color: #333;</span><br><span class="line">  &#125;</span><br><span class="line">  .center &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    text-align: right;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line">  .right &#123;</span><br><span class="line">    padding: 0 5px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h4 id="在-main-js-中将-hm-nav-注册成全局组件"><a href="#在-main-js-中将-hm-nav-注册成全局组件" class="headerlink" title="在 main.js 中将 hm-nav 注册成全局组件"></a>在 main.js 中将 hm-nav 注册成全局组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import HmNav from &#39;commponents&#x2F;hm-nav.vue&#39;</span><br><span class="line">Vue.component(&#39;HmNav&#39;,HmNav)</span><br></pre></td></tr></table></figure><h4 id="在-Profile-个人中心中使用全局组件-hm-nav"><a href="#在-Profile-个人中心中使用全局组件-hm-nav" class="headerlink" title="在 Profile 个人中心中使用全局组件 hm-nav"></a>在 Profile 个人中心中使用全局组件 hm-nav</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;list&quot;&gt;</span><br><span class="line">  &lt;hm-nav name&#x3D;&quot;我的关注&quot; desc&#x3D;&quot;关注的用户&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">  &lt;hm-nav name&#x3D;&quot;我的跟帖&quot; desc&#x3D;&quot;跟帖&#x2F;回复&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">  &lt;hm-nav name&#x3D;&quot;我的收藏&quot; desc&#x3D;&quot;文章&#x2F;视频&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">  &lt;hm-nav name&#x3D;&quot;栏目管理&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">  &lt;hm-nav name&#x3D;&quot;设置&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h4 id="在-hm-nav-组件中通过-props-接收参数-并渲染到页面中"><a href="#在-hm-nav-组件中通过-props-接收参数-并渲染到页面中" class="headerlink" title="在 hm-nav 组件中通过 props 接收参数,并渲染到页面中"></a>在 hm-nav 组件中通过 props 接收参数,并渲染到页面中</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-nav&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;left&quot;&gt;&#123;&#123; name &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;center&quot;&gt;&#123;&#123; desc &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;right&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconjiantou1&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">props:&#123;</span><br><span class="line">    name:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        default:&#39;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    desc:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        default:&#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-登录状态保持"><a href="#3-登录状态保持" class="headerlink" title="3. 登录状态保持"></a>3. 登录状态保持</h3><blockquote><p>cookie+session 实现登录状态保持</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 服务器登录的时候,分配一个session用于存储数据,同时将sessionID返回给浏览器</span><br><span class="line">2. 浏览器通过cookie把sessionID存储起来,下次访问带上</span><br><span class="line">3. 服务器端可以通过sessionID来确定用户是否登录</span><br><span class="line">缺点:</span><br><span class="line">1. 访问量大,服务器需要集群,消耗内存和性能</span><br><span class="line">2. 手机端浏览器很多不支持cookie或者禁用cookie</span><br></pre></td></tr></table></figure><blockquote><p>tooken 令牌实现登录状态保持</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">优势:</span><br><span class="line">1. token无状态,服务器不用存储token,服务器只需要签发和校验token即可</span><br><span class="line">2. token无状态,集群的时候,算法一致,无论访问哪台服务器都是一样的</span><br><span class="line">3. 解析token效率比查询数据库高的多</span><br><span class="line">4. 只要服务器端算法一致,token就可以跨站点登录,cookie受到了同源策略限制,无法跨域(web存储)</span><br><span class="line">5. 在移动端开发中,使用cookie非常麻烦,一般都用token验证</span><br><span class="line">使用:</span><br><span class="line">1. 客户端收到服务器返回的JWT(token),可以存储在Cookie里面,也可以存储在localStroage</span><br><span class="line">2. 之后客户端每次跟服务器端通信,都要带上这个JWT(token)。你可以把它放在Cookie里面自动发送,但是这样不能跨域,所以更好的办法是放在HTTP请求头Authorization字段里面</span><br></pre></td></tr></table></figure><h4 id="在-Login-页中登陆成功时保存-token-用户状态"><a href="#在-Login-页中登陆成功时保存-token-用户状态" class="headerlink" title="在 Login 页中登陆成功时保存 token 用户状态"></a>在 Login 页中登陆成功时保存 token 用户状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">const &#123; statusCode, message, data &#125; &#x3D; res.data</span><br><span class="line">if (statusCode &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">  &#x2F;&#x2F; 先存token, 再跳转</span><br><span class="line">  const &#123; token, user &#125; &#x3D; data</span><br><span class="line">  localStorage.setItem(&#39;token&#39;, token)</span><br><span class="line">  localStorage.setItem(&#39;user_id&#39;, user.id)</span><br><span class="line"></span><br><span class="line">  this.$toast.success(message)</span><br><span class="line">  this.$router.push(&#39;&#x2F;profile&#39;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  this.$toast.fail(message)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="发送请求携带参数的两种方法"><a href="#发送请求携带参数的两种方法" class="headerlink" title="发送请求携带参数的两种方法"></a>发送请求携带参数的两种方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. this.$axios.get(url,config)</span><br><span class="line">&#x2F;&#x2F;config配置对象中配置请求头</span><br><span class="line">2. this.$axios.post(url,data,config)</span><br><span class="line">&#x2F;&#x2F;config配置对象中配置请求头</span><br></pre></td></tr></table></figure><h3 id="4-Profile-个人中心页中一进入页面携带好-token-向服务器发送请求获取数据"><a href="#4-Profile-个人中心页中一进入页面携带好-token-向服务器发送请求获取数据" class="headerlink" title="4. Profile 个人中心页中一进入页面携带好 token 向服务器发送请求获取数据"></a>4. Profile 个人中心页中一进入页面携带好 token 向服务器发送请求获取数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">async created()&#123;</span><br><span class="line">    &#x2F;&#x2F; 获取token</span><br><span class="line">    const id &#x3D; localStroage.getItem(&#39;user_id&#39;)</span><br><span class="line">    const token &#x3D; localStroage.getItem(&#39;token&#39;)</span><br><span class="line">    &#x2F;&#x2F;发送ajax请求,在请求头中携带参数</span><br><span class="line">    const res &#x3D; await this.$axios.get(&#96;&#x2F;user&#x2F;$&#123;id&#125;&#96;,&#123;</span><br><span class="line">        header: &#123;</span><br><span class="line">            Authorization: token</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    &#x2F;&#x2F;结构res.data,把获取到的值赋值给data中定义的profile</span><br><span class="line">    const &#123;statusCode,data&#125; &#x3D; res.data</span><br><span class="line">    if(statysCode&#x3D;&#x3D;&#x3D;200)&#123;</span><br><span class="line">        this.propfile &#x3D; data</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">data ()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        profile:&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在-main-js-中添加请求拦截器携带-token"><a href="#在-main-js-中添加请求拦截器携带-token" class="headerlink" title="在 main.js 中添加请求拦截器携带 token"></a>在 main.js 中添加请求拦截器携带 token</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.request.use(</span><br><span class="line">  function(config) &#123;</span><br><span class="line">    &#x2F;&#x2F; 在发送请求之前, 判断本地有没有token令牌, 只要有token令牌, 一律请求时携带在请求头中</span><br><span class="line">    const token &#x3D; localStorage.getItem(&#39;token&#39;)</span><br><span class="line">    if (token) &#123;</span><br><span class="line">      config.headers.Authorization &#x3D; token</span><br><span class="line">    &#125;</span><br><span class="line">    return config</span><br><span class="line">  &#125;,</span><br><span class="line">  function(error) &#123;</span><br><span class="line">    &#x2F;&#x2F; 对请求错误做些什么</span><br><span class="line">    return Promise.reject(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="5-获取到数据后在-Profile-中渲染数据"><a href="#5-获取到数据后在-Profile-中渲染数据" class="headerlink" title="5. 获取到数据后在 Profile 中渲染数据"></a>5. 获取到数据后在 Profile 中渲染数据</h3><h4 id="通过计算属性拼接图片地址进行渲染"><a href="#通过计算属性拼接图片地址进行渲染" class="headerlink" title="通过计算属性拼接图片地址进行渲染"></a>通过计算属性拼接图片地址进行渲染</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;avatar&quot;&gt;</span><br><span class="line">  &lt;img :src&#x3D;&quot;imgSrc&quot; alt &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">computed:&#123;</span><br><span class="line">    imgSrc()&#123;</span><br><span class="line">        return this.$axios.defaults.baseURL + this.profile.head_img</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;拼接上基地址需要先在main.js中配置axios基础地址,只有配置了基础地址,将来axios的请求都会自动拼接上这个基准路径</span><br><span class="line">&#x2F;&#x2F;axios.defaults.baseURL &#x3D; &#39;http:&#x2F;&#x2F;localhost:3000&#39;</span><br></pre></td></tr></table></figure><h4 id="使用时间过滤器渲染时间"><a href="#使用时间过滤器渲染时间" class="headerlink" title="使用时间过滤器渲染时间"></a>使用时间过滤器渲染时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 安装moment插件</span><br><span class="line">yarn add moment</span><br><span class="line">2. 在main.js中定义全局过滤器,value就是需要操作字符串,&#123;&#123; msg | time &#125;&#125; &#x3D;&gt; msg 的值,就是这边的value</span><br><span class="line">import moment from &#39;moment&#39;</span><br><span class="line">Vue.filter(&#39;time&#39;,function(value)&#123;</span><br><span class="line">    return ,moment(value).format(&#39;YYYY-MM-DD&#39;)</span><br><span class="line">&#125;)</span><br><span class="line">3. 使用过滤器</span><br><span class="line">&lt;p class&#x3D;&quot;time&quot;&gt; &#123;&#123; profile.create_date | time &#125;&#125; &lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><h4 id="性别的显示处理"><a href="#性别的显示处理" class="headerlink" title="性别的显示处理"></a>性别的显示处理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class&#x3D;&quot;name&quot;&gt;</span><br><span class="line">  &lt;i v-if&#x3D;&quot;profile.gender &#x3D;&#x3D;&#x3D; 1&quot; class&#x3D;&quot;iconfont iconxingbienan&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;i v-else class&#x3D;&quot;iconfont iconxingbienv&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  &lt;span&gt;&#123;&#123; profile.nickname &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">  &#x2F;&#x2F;样式</span><br><span class="line">  .name &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    color: #333;</span><br><span class="line">    .iconxingbienan &#123;</span><br><span class="line">      color: skyblue;</span><br><span class="line">      margin-right: 5px;</span><br><span class="line">    &#125;</span><br><span class="line">    .iconxingbienv &#123;</span><br><span class="line">      color: hotpink;</span><br><span class="line">      margin-right: 5px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="6-通过导航守卫拦截未登陆用户"><a href="#6-通过导航守卫拦截未登陆用户" class="headerlink" title="6. 通过导航守卫拦截未登陆用户"></a>6. 通过导航守卫拦截未登陆用户</h3><h4 id="在-index-js-中配置全局前置守卫-所有的路由在被真正访问匹配之前-都会先经过全局前置守卫"><a href="#在-index-js-中配置全局前置守卫-所有的路由在被真正访问匹配之前-都会先经过全局前置守卫" class="headerlink" title="在 index.js 中配置全局前置守卫,所有的路由在被真正访问匹配之前,都会先经过全局前置守卫"></a>在 index.js 中配置全局前置守卫,所有的路由在被真正访问匹配之前,都会先经过全局前置守卫</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;将所有需要授权的页面的路径,存到一个授权数组中去</span><br><span class="line">const AuthUrls &#x3D; [&#39;&#x2F;profile&#39;]</span><br><span class="line">router.beforeEach((to,from,next)&#x3D;&gt;&#123;</span><br><span class="line">    if(AuthUrls.includes(to.path))&#123;</span><br><span class="line">    &#x2F;&#x2F;判断需要登录的页面,可以判断是否有token</span><br><span class="line">        const token &#x3D; localStorage.getItem(&#39;token&#39;)</span><br><span class="line">        if(token)&#123;</span><br><span class="line">            next()</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            next(&#39;&#x2F;login&#39;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">    &#x2F;&#x2F;不需要登录的直接放行</span><br><span class="line">        next()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="7-导航守卫放行过用户-token-也可能会失效-需要在-main-js-中通过响应拦截器对失效的-token-进行处理"><a href="#7-导航守卫放行过用户-token-也可能会失效-需要在-main-js-中通过响应拦截器对失效的-token-进行处理" class="headerlink" title="7. 导航守卫放行过用户 token 也可能会失效,需要在 main.js 中通过响应拦截器对失效的 token 进行处理"></a>7. 导航守卫放行过用户 token 也可能会失效,需要在 main.js 中通过响应拦截器对失效的 token 进行处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.response.use(function(response)&#123;</span><br><span class="line">    &#x2F;&#x2F;对响应数据做点什么,也可以统一的进行相应的判断</span><br><span class="line">    const &#123;statusCode,message&#125; &#x3D; response.data</span><br><span class="line">    if(statusCode &#x3D;&#x3D;&#x3D; 401 &amp;&amp; message &#x3D;&#x3D;&#x3D;&#39;用户信息验证失败&#39;)&#123;</span><br><span class="line">    &#x2F;&#x2F;token过期了将无效token移出</span><br><span class="line">        localStorage.removeItem(&#39;token&#39;)</span><br><span class="line">        localStorage.removeItem(&#39;user_id&#39;)</span><br><span class="line">        Toast(&#39;尊敬的用户,您的登录状态已过期,请重新登录&#39;)</span><br><span class="line">        &#x2F;&#x2F;跳转登录页</span><br><span class="line">        router.push(&#39;&#x2F;login&#39;)</span><br><span class="line">    &#125;</span><br><span class="line">    return response</span><br><span class="line">    &#125;,</span><br><span class="line">    function(error)&#123;</span><br><span class="line">        return Promise.reject(error)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="8-退出功能"><a href="#8-退出功能" class="headerlink" title="8. 退出功能"></a>8. 退出功能</h3><h4 id="在-main-js-中引入-button-组件"><a href="#在-main-js-中引入-button-组件" class="headerlink" title="在 main.js 中引入 button 组件"></a>在 main.js 中引入 button 组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Button &#125; from &#39;vant&#39;</span><br><span class="line">Vue.use(Button)</span><br></pre></td></tr></table></figure><h4 id="在-Profile-中使用-button-组件"><a href="#在-Profile-中使用-button-组件" class="headerlink" title="在 Profile 中使用 button 组件"></a>在 Profile 中使用 button 组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;logout-btn&quot;&gt;</span><br><span class="line">    &lt;van-button size&#x3D;&quot;large&quot; round type&#x3D;&quot;info&gt; 退出 &lt;&#x2F;vant-button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#x2F;&#x2F;修改样式</span><br><span class="line">.logout-btn &#123;</span><br><span class="line">    padding: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="给退出按钮设置点击事件-点击时进行确认退出提示-确认后销毁登录状态-然后进行跳转"><a href="#给退出按钮设置点击事件-点击时进行确认退出提示-确认后销毁登录状态-然后进行跳转" class="headerlink" title="给退出按钮设置点击事件,点击时进行确认退出提示,确认后销毁登录状态,然后进行跳转"></a>给退出按钮设置点击事件,点击时进行确认退出提示,确认后销毁登录状态,然后进行跳转</h4><h4 id="给退出按钮设置点击事件"><a href="#给退出按钮设置点击事件" class="headerlink" title="给退出按钮设置点击事件"></a>给退出按钮设置点击事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;van-button size&#x3D;&quot;large&quot; round type&#x3D;&quot;info&quot; @click&#x3D;&quot;logout&quot;&gt;</span><br><span class="line">退出</span><br><span class="line">&lt;&#x2F;van-button&gt;</span><br></pre></td></tr></table></figure><h4 id="点击后进行退出确认"><a href="#点击后进行退出确认" class="headerlink" title="点击后进行退出确认"></a>点击后进行退出确认</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">async logout()&#123;</span><br><span class="line">&#x2F;&#x2F;try是点击取消后需要抛出错误</span><br><span class="line">    try &#123;</span><br><span class="line">    &#x2F;&#x2F;由于confirm接收一个promise函数,所以可以用async和await进行优化</span><br><span class="line">    &#x2F;&#x2F;点击确认按钮进行提示</span><br><span class="line">        await this.$dialog.confirm(&#123;</span><br><span class="line">            title: &#39;温馨提示&#39;,</span><br><span class="line">            message: &#39;确认退出吗?&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">        &#x2F;&#x2F;清除登录状态</span><br><span class="line">        localStroage.removeItem(&#39;token&#39;)</span><br><span class="line">        localStroage.removeItem(&#39;user_id&#39;)</span><br><span class="line">        &#x2F;&#x2F;点击确认跳转login</span><br><span class="line">        this.$router.push(&#39;&#x2F;login&#39;)</span><br><span class="line">    &#125; catch(e)&#123;</span><br><span class="line">        console.log(e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-点击设置或者个人信息跳转编辑信息页面"><a href="#8-点击设置或者个人信息跳转编辑信息页面" class="headerlink" title="8. 点击设置或者个人信息跳转编辑信息页面"></a>8. 点击设置或者个人信息跳转编辑信息页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;user-info&quot; @click&#x3D;&quot;$router.push(&#39;&#x2F;edit-profile&#39;)&quot;&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&lt;hm-nav name&#x3D;&quot;设置&quot; @click&#x3D;&quot;$router.push(&#39;&#x2F;edit-profile&#39;)&quot;&gt;&lt;&#x2F;hm-nav&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/categories/vue%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/tags/vue%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>3. 从零开始新闻头条(Register注册页)</title>
    <link href="http://guhaijian.github.io/2020/09/12/3.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Register%E6%B3%A8%E5%86%8C%E9%A1%B5)/"/>
    <id>http://guhaijian.github.io/2020/09/12/3.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Register%E6%B3%A8%E5%86%8C%E9%A1%B5)/</id>
    <published>2020-09-12T12:44:30.586Z</published>
    <updated>2020-09-17T00:01:25.641Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="从零开始新闻头条-Register-注册页"><a href="#从零开始新闻头条-Register-注册页" class="headerlink" title="从零开始新闻头条(Register 注册页)"></a>从零开始新闻头条(Register 注册页)</h1><h3 id="1-Register-注册页基本结构和样式"><a href="#1-Register-注册页基本结构和样式" class="headerlink" title="1. Register 注册页基本结构和样式"></a>1. Register 注册页基本结构和样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;结构</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;register&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;close&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconicon-test&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;logo&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconnew&quot;&gt; &lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">      &lt;hm-input&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;nickname&quot;&gt;</span><br><span class="line">      &lt;hm-input&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;password&quot;&gt;</span><br><span class="line">      &lt;hm-input&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;register-btn&quot;&gt;</span><br><span class="line">      &lt;hm-button&gt;&lt;&#x2F;hm-button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;引入hm-input组件和hm-button组件</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HmInput from &#39;components&#x2F;hm-input.vue&#39;</span><br><span class="line">import HmButton from &#39;components&#x2F;hm-button.vue&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HmInput,</span><br><span class="line">    HmButton</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;样式</span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.register &#123;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  .close &#123;</span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 27px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .logo &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 126px;</span><br><span class="line">      color: #d81e06;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="2-组件通信渲染数据"><a href="#2-组件通信渲染数据" class="headerlink" title="2. 组件通信渲染数据"></a>2. 组件通信渲染数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">父传子渲染placeholder、type、err-msg、rules,v-model双向绑定需要输入的内容</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">  &lt;hm-input</span><br><span class="line">    :rules&#x3D;&quot;userRules&quot;</span><br><span class="line">    v-model&#x3D;&quot;username&quot;</span><br><span class="line">    placeholder&#x3D;&quot;账号&#x2F;手机号&quot;</span><br><span class="line">    err-msg&#x3D;&quot;账号必须是1开头, 5-11位的数字&quot;</span><br><span class="line">    type&#x3D;&quot;text&quot;</span><br><span class="line">  &gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;nickname&quot;&gt;</span><br><span class="line">  &lt;hm-input</span><br><span class="line">    :rules&#x3D;&quot;nickRules&quot;</span><br><span class="line">    v-model&#x3D;&quot;nickname&quot;</span><br><span class="line">    placeholder&#x3D;&quot;昵称&quot;</span><br><span class="line">    err-msg&#x3D;&quot;昵称必须是2-6位的中文字符&quot;</span><br><span class="line">    type&#x3D;&quot;text&quot;</span><br><span class="line">  &gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;password&quot;&gt;</span><br><span class="line">  &lt;hm-input</span><br><span class="line">    :rules&#x3D;&quot;passRules&quot;</span><br><span class="line">    v-model&#x3D;&quot;password&quot;</span><br><span class="line">    placeholder&#x3D;&quot;密码&quot;</span><br><span class="line">    err-msg&#x3D;&quot;密码必须是3-11位字符&quot;</span><br><span class="line">    type&#x3D;&quot;password&quot;</span><br><span class="line">  &gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;变量初始化</span><br><span class="line">data() &#123;</span><br><span class="line"> return &#123;</span><br><span class="line">  username: &#39;&#39;,</span><br><span class="line">  nickname: &#39;&#39;,</span><br><span class="line">  password: &#39;&#39;,</span><br><span class="line">  userRules: &#x2F;^1\d&#123;4,10&#125;$&#x2F;,</span><br><span class="line">  nickRules: &#x2F;^[\u4e00-\u9fa5]&#123;2,6&#125;$&#x2F;,</span><br><span class="line">  passRules: &#x2F;^\w&#123;3,11&#125;$&#x2F;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-点击按钮发送注册请求"><a href="#3-点击按钮发送注册请求" class="headerlink" title="3.点击按钮发送注册请求"></a>3.点击按钮发送注册请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">async register() &#123;</span><br><span class="line">  if (!this.userRules.test(this.username)) &#123;</span><br><span class="line">    this.$toast(&#39;请输入正确的用户名&#39;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  if (!this.nickRules.test(this.nickname)) &#123;</span><br><span class="line">    this.$toast(&#39;请输入正确的昵称&#39;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  if (!this.passRules.test(this.password)) &#123;</span><br><span class="line">    this.$toast(&#39;请输入正确的密码&#39;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F;发送ajax请求</span><br><span class="line">  const res &#x3D; await this.$axios.post(&#39;&#x2F;register&#39;, &#123;</span><br><span class="line">    username: this.username,</span><br><span class="line">    password: this.password,</span><br><span class="line">    nickname: this.nickname</span><br><span class="line">  &#125;)</span><br><span class="line">  const &#123; statusCode, message &#125; &#x3D; res.data</span><br><span class="line">  if (statusCode &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">    this.$toast.success(message)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    this.$toast.fail(message)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-路由传参知识点"><a href="#4-路由传参知识点" class="headerlink" title="4. 路由传参知识点"></a>4. 路由传参知识点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1. 通过path跳转</span><br><span class="line">this.$router.push()&#123;</span><br><span class="line">    path:&#39;&#x2F;login&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2. 通过name跳转</span><br><span class="line">this.$router.push()&#123;</span><br><span class="line">    name:&#39;&#x2F;login&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;这种name的方式需要在router&#x2F;index.js文件中配置name,本质跟path跳转一样,少写一个&#x2F;</span><br><span class="line">&#x2F;&#x2F;&#123; path: &#39;&#x2F;login&#39;, name: &#39;login&#39;, component: Login &#125;</span><br><span class="line"></span><br><span class="line">3. query和params传参区别:</span><br><span class="line">&#x2F;&#x2F;query传参会在地址栏拼接参数</span><br><span class="line">this.$router.push()&#123;</span><br><span class="line">    path:&#39;&#x2F;login&#39;,</span><br><span class="line">    query:&#123;</span><br><span class="line">        username:&#39;10086&#39;,</span><br><span class="line">        password:&#39;123&#39;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;params传参是密文传参</span><br><span class="line">this.$router.push()&#123;</span><br><span class="line">    path:&#39;&#x2F;login&#39;,</span><br><span class="line">    params:&#123;</span><br><span class="line">        username:&#39;10086&#39;,</span><br><span class="line">        password:&#39;123&#39;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-注册成功后跳转回-login-页并把-username-和-password-传递登录页中"><a href="#5-注册成功后跳转回-login-页并把-username-和-password-传递登录页中" class="headerlink" title="5.注册成功后跳转回 login 页并把 username 和 password 传递登录页中"></a>5.注册成功后跳转回 login 页并把 username 和 password 传递登录页中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1. Register页面中点击按钮发送请求跳转到Login页面时传递参数给Login页</span><br><span class="line">if (statusCode &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">this.$toast.success(message)</span><br><span class="line">&#x2F;&#x2F; 跳转到登录页,将username和password传递登录页</span><br><span class="line">this.$router.push(&#123;</span><br><span class="line">  name: &#39;login&#39;,</span><br><span class="line">  params: &#123;</span><br><span class="line">    username: this.username,</span><br><span class="line">    password: this.password</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">this.$toast.fail(message)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2. 一进入Login页中就在created中去尝试获取username和password,如果有就填充到表单中,如果没有就正常渲染</span><br><span class="line"></span><br><span class="line">created() &#123;</span><br><span class="line">    const &#123; username, password &#125; &#x3D; this.$route.params</span><br><span class="line">    if (username &amp;&amp; password) &#123;</span><br><span class="line">        this.username &#x3D; username</span><br><span class="line">        this.password &#x3D; password</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/categories/vue%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/tags/vue%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>2. 从零开始新闻头条(Login登录页)</title>
    <link href="http://guhaijian.github.io/2020/09/12/2.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Login%E7%99%BB%E5%BD%95%E9%A1%B5)/"/>
    <id>http://guhaijian.github.io/2020/09/12/2.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(Login%E7%99%BB%E5%BD%95%E9%A1%B5)/</id>
    <published>2020-09-12T12:44:30.583Z</published>
    <updated>2020-09-12T12:42:02.539Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="从零开始新闻头条-Login-登录页"><a href="#从零开始新闻头条-Login-登录页" class="headerlink" title="从零开始新闻头条(Login 登录页)"></a>从零开始新闻头条(Login 登录页)</h1><h2 id="在-pages-文件夹下新建-login-登录页"><a href="#在-pages-文件夹下新建-login-登录页" class="headerlink" title="在 pages 文件夹下新建 login 登录页"></a>在 pages 文件夹下新建 login 登录页</h2><h4 id="1-login-登录页基本结构"><a href="#1-login-登录页基本结构" class="headerlink" title="1. login 登录页基本结构"></a>1. login 登录页基本结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;login&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;close&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconicon-test&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;logo&quot;&gt;</span><br><span class="line">      &lt;i class&#x3D;&quot;iconfont iconnew&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;text&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;password&quot;&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;password&quot; &#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;login-btn&quot;&gt;</span><br><span class="line">      &lt;button&gt;登录&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><h4 id="2-login-登录页基本样式"><a href="#2-login-登录页基本样式" class="headerlink" title="2. login 登录页基本样式"></a>2. login 登录页基本样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;当标签添加scoped属性时,会给当前组件模板下所有元素加上一个自定义属性,使该标签下的css属性只作用于当前组件元素</span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.login &#123;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  .close &#123;</span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 27px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .logo &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 126px;</span><br><span class="line">      color: #d81e06;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="3-封装-hm-input-输入框组件"><a href="#3-封装-hm-input-输入框组件" class="headerlink" title="3. 封装 hm-input 输入框组件"></a>3. 封装 hm-input 输入框组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1. 在components中创建hm-input.vue组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-imput&quot;&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;text&quot; &#x2F;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;tips&quot;&gt;提示&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">2. 给hm-input组件定义基本样式</span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.hm-input &#123;</span><br><span class="line">  padding-bottom: 20px;</span><br><span class="line">  position: relative;</span><br><span class="line">  .inp &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    border-bottom: 2px solid #666;</span><br><span class="line">    background: transparent;</span><br><span class="line">    width: 100%;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">    &amp;.success &#123;</span><br><span class="line">      border-color: green;</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;.error &#123;</span><br><span class="line">      border-color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .tips &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><h3 id="4-使用-hm-input-输入框组件"><a href="#4-使用-hm-input-输入框组件" class="headerlink" title="4. 使用 hm-input 输入框组件"></a>4. 使用 hm-input 输入框组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. 在Login组件中局部注册HmInput组件</span><br><span class="line"></span><br><span class="line">import HmInput from &#39;components&#x2F;hm-input.vue&#39;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HmInput</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">2. 在Login组件模板中插入hm-input组件</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">  &lt;hm-input&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;password&quot;&gt;</span><br><span class="line">  &lt;hm-input&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="5-input-框双向绑定传递参数"><a href="#5-input-框双向绑定传递参数" class="headerlink" title="5. input 框双向绑定传递参数"></a>5. input 框双向绑定传递参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">1. 父传子的方式传递placeholder和type属性</span><br><span class="line"></span><br><span class="line">父传子将父组件中的值传递给子组件</span><br><span class="line">&lt;hm-input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;请输入手机号&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;hm-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;请输入密码&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">子组件中通过props接收参数</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    placeholder: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#39;&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    type: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      dafault: &#39;text&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">子组件模板中通过v-bind绑定参数</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-imput&quot;&gt;</span><br><span class="line">    &lt;input :type&#x3D;&quot;type&quot; :placeholder&#x3D;&quot;placeholder&quot; class&#x3D;&quot;inp&quot; &#x2F;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;tips&quot;&gt;提示&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">2. 子传父的方式在子组件输入框中输入内容,能修改父组件的username</span><br><span class="line"></span><br><span class="line">子组件中注册事件传递参数给父组件</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-imput&quot;&gt;</span><br><span class="line">  &#x2F;&#x2F;动态解析value值</span><br><span class="line">    :value&#x3D;&quot;value&quot;</span><br><span class="line">  &#x2F;&#x2F;注册键盘输入事件</span><br><span class="line">    @input&#x3D;&quot;handleInput&quot;</span><br><span class="line">    class&#x3D;&quot;inp&quot; &#x2F;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;tips&quot;&gt;提示&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line"> prop:&#123;</span><br><span class="line"> &#x2F;&#x2F;由于input输入是双向绑定的,所以父传子也要接收value值</span><br><span class="line">    value:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        dafault:&#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> handleInput(e)&#123;</span><br><span class="line"> &#x2F;&#x2F;获取当前事件源的内容</span><br><span class="line">  const value &#x3D; e.target.value</span><br><span class="line"> &#x2F;&#x2F;子传父传输入的内容</span><br><span class="line">  this.$emit(&#39;input&#39;,value)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">父组件中接收参数的同时双向绑定传递参数</span><br><span class="line">&#x2F;&#x2F;v-model双向绑定会做两件事,一件是设置value值:value&#x3D;&quot;&quot;,另一件事是注册input事件,将得到的赋值传给绑定的变量 @input</span><br><span class="line">&lt;hm-input v-model&#x3D;&quot;username&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;hm-input v-model&#x3D;&quot;password&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line"></span><br><span class="line">3. 传递参数时进行格式校验</span><br><span class="line"></span><br><span class="line">父组件中定义参数规则</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    userRules: &#x2F;^1\d&#123;4,10&#125;$&#x2F;,</span><br><span class="line">    passRules: &#x2F;^\w&#123;3,11&#125;$&#x2F;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">父组件中通过父传子的形式传递参数给子组件</span><br><span class="line">&lt;hm-input :rules &#x3D; &quot;userRules&quot; err-msg&#x3D;&quot;请输入正确的手机号, 格式:5-11位数字&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line">&lt;hm-input :rules &#x3D; &quot;passRules&quot; err-msg&#x3D;&quot;请输入正确的密码, 格式:3-11位字符&quot;&gt;&lt;&#x2F;hm-input&gt;</span><br><span class="line"></span><br><span class="line">子组件props中接收参数</span><br><span class="line">props:&#123;</span><br><span class="line">    rules: &#123;</span><br><span class="line">     type: RegExp</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F; &#39;err-msg&#39;</span><br><span class="line">    errMsg: &#123;</span><br><span class="line">     type: String,</span><br><span class="line">     default: &#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">子组件模板中绑定变量</span><br><span class="line">&lt;span class&#x3D;&quot;tips&quot;&gt;&#123;&#123; errMsg &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line"></span><br><span class="line">子组件的data中定义一个变量status,用来表示账号密码校验后的提示状态</span><br><span class="line">data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        status:&#39;&#39;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">在子组件handleInput事件中实时根据规则判断用户输入的正确与否,并把状态信息赋值给status</span><br><span class="line">handleInput(e) &#123;</span><br><span class="line">  const value &#x3D; e.target.value</span><br><span class="line">  this.$emit(&#39;input&#39;, value)</span><br><span class="line">  console.log(e.target.value)</span><br><span class="line">  &#x2F;&#x2F;如果没有配置规则,就不需要校验了</span><br><span class="line">  if (!this.rules) return</span><br><span class="line">  if (this.rules.test(value)) &#123;</span><br><span class="line">    this.status &#x3D; &#39;success&#39;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    this.status &#x3D; &#39;error&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">根据status的值,控制input框的类名(下划线)</span><br><span class="line">:class &#x3D; &quot;[status]&quot;</span><br><span class="line"></span><br><span class="line">控制提示信息的显示和隐藏</span><br><span class="line">&lt;span class&#x3D;&quot;tips&quot; v-show&#x3D;&quot;isShowTips&quot;&gt;&#123;&#123; errMsg &#125;&#125;&lt;&#x2F;span&gt;</span><br><span class="line">computed:&#123;</span><br><span class="line">    isShowTips()&#123;</span><br><span class="line">        return this.status &#x3D;&#x3D;&#x3D; &#39;error&#39; &amp;&amp; this.errMsg</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-封装-hm-button-按钮组件"><a href="#6-封装-hm-button-按钮组件" class="headerlink" title="6. 封装 hm-button 按钮组件"></a>6. 封装 hm-button 按钮组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">创建hm-button基本结构样式</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;hm-button&quot;</span><br><span class="line">  &#x2F;&#x2F;由于组件标签间的内容会被替换,可以通过slot插槽来保留标签间内容</span><br><span class="line">    &lt;slot&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;</span><br><span class="line">.hm-button &#123;</span><br><span class="line">  background-color: #c30;</span><br><span class="line">  height: 48px;</span><br><span class="line">  line-height: 48px;</span><br><span class="line">  color: #fff;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border-radius: 24px;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">在Login父组件中引入子组件</span><br><span class="line">&lt;div class&#x3D;&quot;login-btn&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;标签间文字用slot插槽替换</span><br><span class="line">  &lt;HmButton&gt;登录&lt;&#x2F;HmButton&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">import HmButton from &#39;components&#x2F;hm-button.vue&#39;</span><br><span class="line"></span><br><span class="line">components: &#123;</span><br><span class="line">    HmButton</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">子传父,让子组件支持点击事件,父组件才能通过点击事件发送请求</span><br><span class="line">&lt;div class&#x3D;&quot;hm-button&quot; @click&#x3D;&quot;handleClick&quot;&gt;</span><br><span class="line">    &lt;slot&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">  handleClick(e)&#123;</span><br><span class="line">    this.$emit(&#39;click&#39;,e)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">父组件注册点击事件</span><br><span class="line">&lt;div class&#x3D;&quot;login-btn&quot;&gt;</span><br><span class="line">  &lt;HmButton @click&#x3D;&quot;loginFn&quot;&gt;登录&lt;&#x2F;HmButton&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="7-安装-axios-并在-main-js-中进行优化"><a href="#7-安装-axios-并在-main-js-中进行优化" class="headerlink" title="==7. 安装 axios 并在 main.js 中进行优化=="></a>==7. 安装 axios 并在 main.js 中进行优化==</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. yarn add axios 安装</span><br><span class="line">2. import axios from &#39;axios&#39; 导包</span><br><span class="line">&#x2F;&#x2F; axios优化1: 将axios挂载到vue原型上,将来实例中使用 &#x3D;&gt; this.$axios this.$toast</span><br><span class="line">Vue.prototype.$axios &#x3D; axios</span><br><span class="line">&#x2F;&#x2F; axios优化2: 配置基础地址, 只要配置了基础地址, 将来axios的请求都会自动拼上这个基准路径</span><br><span class="line">axios.defaults.baseURL &#x3D; &#39;http:&#x2F;&#x2F;localhost:3000&#39;</span><br></pre></td></tr></table></figure><h3 id="8-在-main-js-中按需引入-toast-弹出框组件"><a href="#8-在-main-js-中按需引入-toast-弹出框组件" class="headerlink" title="8. 在 main.js 中按需引入 toast 弹出框组件"></a>8. 在 main.js 中按需引入 toast 弹出框组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Toast &#125; from &#39;vant&#39;</span><br><span class="line">Vue.use(Toast)</span><br><span class="line">&#x2F;&#x2F;this.$toast()在组建中进行使用</span><br></pre></td></tr></table></figure><h3 id="9-点击按钮发送-ajax-请求"><a href="#9-点击按钮发送-ajax-请求" class="headerlink" title="9. 点击按钮发送 ajax 请求"></a>9. 点击按钮发送 ajax 请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">async loginFn(e) &#123;</span><br><span class="line">  &#x2F;&#x2F; 发送请求之前, 进行数据的校验</span><br><span class="line">  if (!this.userRules.test(this.username)) &#123;</span><br><span class="line">    this.$toast(&#39;请输入正确的用户名&#39;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  if (!this.passRules.test(this.password)) &#123;</span><br><span class="line">    this.$toast(&#39;请输入正确的密码&#39;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; 发送 ajax 请求</span><br><span class="line">  const res &#x3D; await this.$axios.post(&#39;&#x2F;login&#39;, &#123;</span><br><span class="line">    username: this.username,</span><br><span class="line">    password: this.password</span><br><span class="line">  &#125;)</span><br><span class="line">  const &#123; statusCode, message, data &#125; &#x3D; res.data</span><br><span class="line">  if (statusCode &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">    &#x2F;&#x2F; 先存token, 再跳转</span><br><span class="line">    const &#123; token, user &#125; &#x3D; data</span><br><span class="line">    localStorage.setItem(&#39;token&#39;, token)</span><br><span class="line">    localStorage.setItem(&#39;user_id&#39;, user.id)</span><br><span class="line">    &#x2F;&#x2F;登录成功时的提示框</span><br><span class="line">    this.$toast.success(message)</span><br><span class="line">    &#x2F;&#x2F;点击进行跳转</span><br><span class="line">    &#x2F;&#x2F; this.$router.push(&#39;&#x2F;home&#39;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">   &#x2F;&#x2F;登录失败时的提示框</span><br><span class="line">    this.$toast.fail(message)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-按钮下方添加注册功能"><a href="#10-按钮下方添加注册功能" class="headerlink" title="10. 按钮下方添加注册功能"></a>10. 按钮下方添加注册功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;结构</span><br><span class="line">&lt;div class&#x3D;&quot;go-register&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;router-link相当于a链接跳转</span><br><span class="line">  没有账号? 立即 &lt;router-link to&#x3D;&quot;&#x2F;register&quot;&gt;注册&lt;&#x2F;router-link&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&#x2F;&#x2F;样式</span><br><span class="line">.go-register &#123;</span><br><span class="line">    padding: 20px 0;</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-size: 18px;</span><br><span class="line">    a &#123;</span><br><span class="line">     color: blue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/categories/vue%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/tags/vue%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>1. 从零开始新闻头条(项目初始化配置)</title>
    <link href="http://guhaijian.github.io/2020/09/12/1.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE)/"/>
    <id>http://guhaijian.github.io/2020/09/12/1.%20%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%96%B0%E9%97%BB%E5%A4%B4%E6%9D%A1(%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE)/</id>
    <published>2020-09-12T12:44:30.564Z</published>
    <updated>2020-09-12T12:41:36.311Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="从零开始新闻头条-项目初始化"><a href="#从零开始新闻头条-项目初始化" class="headerlink" title="从零开始新闻头条(项目初始化)"></a>从零开始新闻头条(项目初始化)</h1><h3 id="1-用-vue-cli-脚手架初始化项目"><a href="#1-用-vue-cli-脚手架初始化项目" class="headerlink" title="1. 用 vue-cli 脚手架初始化项目"></a>1. 用 vue-cli 脚手架初始化项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. vue create hm-news</span><br><span class="line">&#x2F;&#x2F;vue --version 查看vue-cli 脚手架版本信息</span><br><span class="line">&#x2F;&#x2F;yarn global add @vue&#x2F;cli 全局更新vue-cli脚手架</span><br><span class="line">&#x2F;&#x2F;选择配置信息hm-news([Vue 2]node-sass,bable,router,eslint)</span><br><span class="line">2. 创建配置文件vue.config.js</span><br><span class="line">&#x2F;&#x2F;保存自动打开浏览器</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    devServe:&#123;</span><br><span class="line">        open: true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-配置-eslint-进行代码规范-可不用-直接用-prettier-插件"><a href="#2-配置-eslint-进行代码规范-可不用-直接用-prettier-插件" class="headerlink" title="2. 配置 eslint 进行代码规范(可不用,直接用 prettier 插件)"></a>2. 配置 eslint 进行代码规范(可不用,直接用 prettier 插件)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1. 在根目录创建.prettierrc配置文件</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;是否在行尾加分号</span><br><span class="line">    &quot;semi&quot;: false,</span><br><span class="line">    &#x2F;&#x2F;强制单引号</span><br><span class="line">    &quot;singleQuote&quot;: true,</span><br><span class="line">    &#x2F;&#x2F;尾随逗号</span><br><span class="line">    &quot;trailingComma&quot;: &quot;none&quot;,</span><br><span class="line">    &#x2F;&#x2F;只有一个参数的箭头函数的参数是否带圆括号（默认avoid不带）</span><br><span class="line">    &quot;arrowParens&quot;: &quot;avoid&quot;,</span><br><span class="line">    &#x2F;&#x2F;花括号前后空格</span><br><span class="line">    &quot;bracketSpacing&quot;: true,</span><br><span class="line">    &#x2F;&#x2F;使用tab（制表符）缩进而非空格</span><br><span class="line">    &quot;useTabs&quot;: true</span><br><span class="line">&#125;</span><br><span class="line">2. 由于插件prettier和eslint冲突.需要在package.json中修改一下eslint规则</span><br><span class="line">&quot;rules&quot;: &#123;</span><br><span class="line">  &quot;semi&quot;: [&quot;error&quot;, &quot;never&quot;],</span><br><span class="line">  &quot;space-before-function-paren&quot;: [&quot;error&quot;, &quot;never&quot;]</span><br><span class="line">&#125;</span><br><span class="line">2. 选择配置是否关闭错误提示</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    open: true,</span><br><span class="line">    &#x2F;&#x2F; 关闭错误遮罩</span><br><span class="line">    overlay: &#123;</span><br><span class="line">      warnings: false,</span><br><span class="line">      errors: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; 关闭 eslint 保存校验</span><br><span class="line">  lintOnSave: false,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在-main-js-引入公共样式和在线图标库"><a href="#3-在-main-js-引入公共样式和在线图标库" class="headerlink" title="3. 在 main.js 引入公共样式和在线图标库"></a>3. 在 main.js 引入公共样式和在线图标库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 在src文件夹下新建styles文件夹并创建公共样式和在线图标库的css文件</span><br><span class="line">2. 在src文件夹下的main.js中全局引入公共样式和字体图标库</span><br><span class="line">&#x2F;&#x2F; 导入公共的默认样式</span><br><span class="line">import &#39;.&#x2F;styles&#x2F;base.css&#39;</span><br><span class="line">&#x2F;&#x2F; 导入字体图标的样式</span><br><span class="line">import &#39;.&#x2F;styles&#x2F;iconfont.css&#39;</span><br></pre></td></tr></table></figure><h3 id="4-安装插件实现-rem-布局"><a href="#4-安装插件实现-rem-布局" class="headerlink" title="==4. 安装插件实现 rem 布局=="></a>==4. 安装插件实现 rem 布局==</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1. yarn add lib-flexible postcss-px2rem 安装插件</span><br><span class="line">2. 在public中的index.html中删除meta标签(viewport),因为插件会自动添加&lt;meta name&#x3D;&#39;viewport&#39;&gt;标签</span><br><span class="line">3. 在src&#x2F;main.js中导入插件包</span><br><span class="line">import &#39;lib-flexible&#39;</span><br><span class="line">4. 在vue.config.js中配置rem插件</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    open: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F; rem 的配置</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      css: &#123;&#125;,</span><br><span class="line">      postcss: &#123;</span><br><span class="line">        plugins: [</span><br><span class="line">          require(&#39;postcss-px2rem&#39;)(&#123;</span><br><span class="line">            &#x2F;&#x2F; 适配 360 屏幕, 设计图720中量出来的尺寸要 &#x2F; 2</span><br><span class="line">            &#x2F;&#x2F; 适配 375 屏幕, 设计图750中量出来的尺寸要 &#x2F; 2</span><br><span class="line">            remUnit: 36</span><br><span class="line">          &#125;)</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-在-vue-config-js-中进行目录别名配置"><a href="#5-在-vue-config-js-中进行目录别名配置" class="headerlink" title="5. 在 vue.config.js 中进行目录别名配置"></a>5. 在 vue.config.js 中进行目录别名配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1. 引入path模块</span><br><span class="line">const path &#x3D; require(&#39;path&#39;)&#x2F;&#x2F; 引入path模块</span><br><span class="line">function resolve (dir) &#123;</span><br><span class="line">  return path.join(__dirname, dir)&#x2F;&#x2F; path.join(__dirname)设置绝对路径</span><br><span class="line">&#125;</span><br><span class="line">2. 在module.exports进行别名配置</span><br><span class="line">module.exports&#x3D;&#123;</span><br><span class="line">  chainWebpack: (config) &#x3D;&gt; &#123;</span><br><span class="line">    config.resolve.alias</span><br><span class="line">      .set(&#39;@&#39;, resolve(&#39;.&#x2F;src&#39;))</span><br><span class="line">      .set(&#39;components&#39;, resolve(&#39;.&#x2F;src&#x2F;components&#39;))</span><br><span class="line">      .set(&#39;pages&#39;, resolve(&#39;.&#x2F;src&#x2F;pages&#39;))</span><br><span class="line">      .set(&#39;assets&#39;, resolve(&#39;.&#x2F;src&#x2F;assets&#39;))</span><br><span class="line">    &#x2F;&#x2F; set第一个参数：设置的别名，第二个参数：设置的路径</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-使用码云仓库-gitee-管理项目"><a href="#6-使用码云仓库-gitee-管理项目" class="headerlink" title="6. 使用码云仓库 gitee 管理项目"></a>6. 使用码云仓库 gitee 管理项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. 将本地项目推送到暂存区</span><br><span class="line">&#x2F;&#x2F;由于已经初始化过项目了,所以不需要git init 来进行初始化</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#39;初始化项目&#39;</span><br><span class="line">2. 在gitee上新建远程仓库名hm-news</span><br><span class="line">&#x2F;&#x2F;由于已经初始化过项目了,所以不需要勾选模板文件</span><br><span class="line">3. 创建远程仓库别名为hm-news</span><br><span class="line">git remote add hm-news  git@gitee.com:guhaijian&#x2F;hm-news.git</span><br><span class="line">4. 推送到远程仓库</span><br><span class="line">git push -u hm-news master</span><br><span class="line">&#x2F;&#x2F;-u一下之后就可以直接git push了</span><br></pre></td></tr></table></figure><h3 id="7-创建-login-登录组件并配置相关路由"><a href="#7-创建-login-登录组件并配置相关路由" class="headerlink" title="7. 创建 login 登录组件并配置相关路由"></a>7. 创建 login 登录组件并配置相关路由</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1. 在src文件夹下新建pages文件夹,并在pages文件下新建Login.vue登录组件和Register.vue注册组件</span><br><span class="line"></span><br><span class="line">2. 修改初始化创建的App.vue,并添加路由出口</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;&#x2F;router-view&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;style lang&#x3D;&quot;scss&quot;&gt;&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">3. 在src文件夹下的router&#x2F;index.js路由文件下配置路由信息</span><br><span class="line"></span><br><span class="line">import Vue from &#39;vue&#39;</span><br><span class="line">import VueRouter from &#39;vue-router&#39;</span><br><span class="line">import Login from &#39;pages&#x2F;Login.vue&#39;</span><br><span class="line">import Register from &#39;pages&#x2F;Register.vue&#39;</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">&#x2F;&#x2F;通过路由切换显示</span><br><span class="line">const router &#x3D; new VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123; path: &#39;&#x2F;&#39;, redirect: &#39;&#x2F;login&#39; &#125;,</span><br><span class="line">    &#123; path: &#39;&#x2F;login&#39;, component: Login &#125;,</span><br><span class="line">    &#123; path: &#39;&#x2F;register&#39;, component: Register &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;)</span><br><span class="line">export default router</span><br></pre></td></tr></table></figure><h3 id="8-vant-ui-的按需加载使用"><a href="#8-vant-ui-的按需加载使用" class="headerlink" title="==8. vant-ui 的按需加载使用=="></a>==8. vant-ui 的按需加载使用==</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. yarn add vant 进行安装</span><br><span class="line">2. yarn add babel-plugin-import -D 安装插件</span><br><span class="line">3. 在babel.config.js中配置</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    [&#39;import&#39;, &#123;</span><br><span class="line">      libraryName: &#39;vant&#39;,</span><br><span class="line">      libraryDirectory: &#39;es&#39;,</span><br><span class="line">      style: true</span><br><span class="line">    &#125;, &#39;vant&#39;]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/categories/vue%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="vue项目" scheme="http://guhaijian.github.io/tags/vue%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>事件绑定和事件委托</title>
    <link href="http://guhaijian.github.io/2020/07/26/js%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
    <id>http://guhaijian.github.io/2020/07/26/js%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/</id>
    <published>2020-07-26T08:15:57.087Z</published>
    <updated>2020-09-12T12:55:50.934Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="js-事件绑定和事件委托"><a href="#js-事件绑定和事件委托" class="headerlink" title="js 事件绑定和事件委托"></a>js 事件绑定和事件委托</h1><h2 id="js-中三种事件绑定"><a href="#js-中三种事件绑定" class="headerlink" title="js 中三种事件绑定"></a>js 中三种事件绑定</h2><h3 id="1-在-dom-元素中直接绑定"><a href="#1-在-dom-元素中直接绑定" class="headerlink" title="1.在 dom 元素中直接绑定"></a>1.在 dom 元素中直接绑定</h3><blockquote><p>在 DOM 元素中如果绑定两个事件，只会执行第一个</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;click me&quot; onclick&#x3D;&quot;hello()&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function hello()&#123;</span><br><span class="line">    alert(&quot;hello world!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-通过-js-代码绑定"><a href="#2-通过-js-代码绑定" class="headerlink" title="2.通过 js 代码绑定"></a>2.通过 js 代码绑定</h3><blockquote><p>通过匿名函数方式绑定的事件只会执行最后绑定的那个</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;click me&quot; id&#x3D;&quot;btn&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.getElementById(&quot;btn&quot;).onclick &#x3D; function()&#123;</span><br><span class="line">    alert(&quot;hello world!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-绑定事件监听函数"><a href="#3-绑定事件监听函数" class="headerlink" title="3.绑定事件监听函数"></a>3.绑定事件监听函数</h3><blockquote><p>事件监听：为同一个对象的同一个事件绑定多个事件处理程序</p></blockquote><ul><li>W3C 规范：addEventListener（）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--element.addEventListener(event, function, useCapture)--&gt;</span><br><span class="line">&lt;!--event:（必需）事件名，支持所有 DOM事件 --&gt;</span><br><span class="line">&lt;!--function：（必需）指定要事件触发时执行的函数--&gt;</span><br><span class="line">&lt;!--useCapture：（可选）指定事件是否在捕获或冒泡阶段执行。true，捕获。false，冒泡。默认false。--&gt;</span><br><span class="line">&lt;!--removeEventListener（event, function）：移除事件监听--&gt;</span><br><span class="line">&lt;!--注：IE8以下不支持--&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;click me&quot; id&#x3D;&quot;btn&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.getElementById(&quot;btn&quot;).addEventListener(&quot;click&quot;,hello);</span><br><span class="line">    function hello()&#123;</span><br><span class="line">    alert(&quot;hello world!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ul><li>IE8 之前的方法：attachEvent（）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--element.attachEvent(event, function)--&gt;</span><br><span class="line">&lt;!--event：（必需）事件类型。需加“on“，例如：onclick。--&gt;</span><br><span class="line">&lt;!--function：（必需）指定要事件触发时执行的函数。--&gt;</span><br><span class="line">&lt;!--detachEvent：取消事件监听--&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;click me&quot; id&#x3D;&quot;btn&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">document.getElementById(&quot;btn&quot;).attachEvent(&quot;onclick&quot;,hello);</span><br><span class="line">    function hello()&#123;</span><br><span class="line">    alert(&quot;hello world!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><blockquote><ol><li>事件委托就是利用冒泡的原理，将事件添加到父元素或者祖先元素身上，去触发执行效果。</li><li>事件绑定无法对动态创建的元素添加事件，事件委托可以给动态创建的元素添加事件。</li><li>每一次访问 dom 元素都会引起浏览器重绘和重排，次数多了就会影响性能，所以在处理大量的事件时，事件委托比事件绑定效率高</li><li>每一个绑定事件的元素都要绑定一个函数，每个函数都是一个对象，对象会占用很多内存，内存中的对象越多，性能就越差。事件委托只给父元素或者祖先元素添加事件，所以总体上比较节约内存</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="javascript" scheme="http://guhaijian.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>利用async和axios发送请求</title>
    <link href="http://guhaijian.github.io/2020/07/26/%E5%88%A9%E7%94%A8async%E5%92%8Cawite%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/"/>
    <id>http://guhaijian.github.io/2020/07/26/%E5%88%A9%E7%94%A8async%E5%92%8Cawite%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/</id>
    <published>2020-07-26T08:15:57.076Z</published>
    <updated>2020-09-12T12:55:47.793Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="利用-async-和-awite-发送-axios-请求"><a href="#利用-async-和-awite-发送-axios-请求" class="headerlink" title="利用 async 和 awite 发送 axios 请求"></a>利用 async 和 awite 发送 axios 请求</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    function axios(obj) &#123;</span><br><span class="line">        return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">            const xhr &#x3D; new XMLHttpRequest()</span><br><span class="line">            xhr.open(obj.method, obj.url)</span><br><span class="line">            xhr.send(null)</span><br><span class="line">            xhr.onreadystatechange &#x3D; function () &#123;</span><br><span class="line">                if (xhr.readyState &#x3D;&#x3D;&#x3D; 4) &#123;</span><br><span class="line">                    if (xhr.status &#x3D;&#x3D;&#x3D; 200) &#123;</span><br><span class="line">                    resolve(JSON.parse(xhr.responseText))</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        reject(xhr.responseText)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    async function fn() &#123;</span><br><span class="line">        const res &#x3D; await axios(&#123;</span><br><span class="line">            method: &#39;get&#39;,</span><br><span class="line">            url: &#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">            console.log(res)</span><br><span class="line">        const res2 &#x3D; await axios(&#123;</span><br><span class="line">            method: &#39;get&#39;,</span><br><span class="line">            url: &#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#x2F;1&#39;</span><br><span class="line">        &#125;)</span><br><span class="line">            console.log(res2)</span><br><span class="line">    &#125;</span><br><span class="line">    fn()</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="ajax" scheme="http://guhaijian.github.io/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>事件循环队列</title>
    <link href="http://guhaijian.github.io/2020/07/26/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/"/>
    <id>http://guhaijian.github.io/2020/07/26/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/</id>
    <published>2020-07-26T08:15:57.072Z</published>
    <updated>2020-09-12T12:55:59.194Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="事件循环队列"><a href="#事件循环队列" class="headerlink" title="事件循环队列"></a>事件循环队列</h1><h3 id="线程概念："><a href="#线程概念：" class="headerlink" title="线程概念："></a>线程概念：</h3><ul><li>==浏览器是多线程的==，其包含的线程有 GUI 渲染线程（负责渲染页面，解析 HTML、CSS 构成 DOM 树、JS 引擎、事件触发线程、定时器触发线程、HTTP 请求线程等主要线程）</li><li>==JS 引擎是单线程的==，可以把这个线程称之为==JS 主线程==</li><li>我们把 JS 中处理异步文件读取、AJAX 请求等==异步事件==执行的线程称之为==幕后线程==或者工作线程，一般认为该线程在浏览器的 JS 引擎中，但与主线程分开</li></ul><h3 id="任务队列："><a href="#任务队列：" class="headerlink" title="任务队列："></a>任务队列：</h3><ul><li>==同步任务==：是==主线程==上排队执行的任务，只有前一个任务执行完毕才会去执行后一个任务</li><li>==异步任务==：是进入到==任务队列==中的任务，==只有任务队列通知主线程某个异步任务可以执行了，该任务才会进入主线程==</li></ul><h3 id="任务队列中的宏任务和微任务："><a href="#任务队列中的宏任务和微任务：" class="headerlink" title="任务队列中的宏任务和微任务："></a>任务队列中的宏任务和微任务：</h3><ul><li>==宏任务==：==script== ( 整体代码 )、==setTimeout==、setInterval、I/O、UI 交互事件、setImmediate(Node.js 环境)</li><li>==微任务==：==Promise==、MutaionObserver（H5 新特性，当 DOM 树发生变动时，会等所有 DOM 操作完后一次性触发，这是一个异步任务）、process.nextTick ( Node.js 环境 )</li></ul><h3 id="流程图解"><a href="#流程图解" class="headerlink" title="流程图解"></a>流程图解</h3><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/images/%E4%BA%8B%E4%BB%B6%E9%98%9F%E5%88%97.jpg" alt=""></p><h3 id="案例解析"><a href="#案例解析" class="headerlink" title="案例解析"></a>案例解析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">console.log(0)</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        &lt;!--等待执行 - 宏任务2--&gt;</span><br><span class="line">        console.log(1)</span><br><span class="line">        &#125;, 0)</span><br><span class="line">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(2)</span><br><span class="line">    &lt;!--将外层的promise对象的状态, 改成fulfilled成功, 将来.then可以执行 p1--&gt;</span><br><span class="line">    resolve(&#39;p1&#39;)</span><br><span class="line">new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(3)</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        &lt;!--等待执行 --- 宏任务3--&gt;</span><br><span class="line">        &lt;!--promise的状态只能被修改一次, 一旦被修改, 就会状态凝固--&gt;</span><br><span class="line">            resolve(&#39;setTimeout2&#39;)</span><br><span class="line">            console.log(4)</span><br><span class="line">         &#125;, 0)</span><br><span class="line">    &lt;!--将内层的promise对象的状态, 改成fulfilled成功, 将来.then p2--&gt;</span><br><span class="line">    resolve(&#39;p2&#39;)</span><br><span class="line">&#125;).then(data &#x3D;&gt; &#123;</span><br><span class="line">    &lt;!--排队 --- 微任务1--&gt;</span><br><span class="line">        console.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">        setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        &lt;!--等待执行 ---- 宏任务4--&gt;</span><br><span class="line">          resolve(&#39;setTimeout1&#39;)</span><br><span class="line">          console.log(5)</span><br><span class="line">        &#125;, 0)</span><br><span class="line">&#125;).then(data &#x3D;&gt; &#123;</span><br><span class="line">    &lt;!--微任务2--&gt;</span><br><span class="line">        console.log(data)</span><br><span class="line">    &#125;)</span><br><span class="line">        console.log(6)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vue基础" scheme="http://guhaijian.github.io/tags/vue%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>VUE生命周期</title>
    <link href="http://guhaijian.github.io/2020/07/26/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://guhaijian.github.io/2020/07/26/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</id>
    <published>2020-07-26T08:15:57.068Z</published>
    <updated>2020-09-12T12:56:36.471Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="VUE-生命周期"><a href="#VUE-生命周期" class="headerlink" title="VUE 生命周期"></a>VUE 生命周期</h1><h1 id="生命周期图解"><a href="#生命周期图解" class="headerlink" title="生命周期图解"></a>生命周期图解</h1><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/images/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E8%A7%A3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vue基础" scheme="http://guhaijian.github.io/tags/vue%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>双向数据绑定</title>
    <link href="http://guhaijian.github.io/2020/07/26/%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/"/>
    <id>http://guhaijian.github.io/2020/07/26/%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/</id>
    <published>2020-07-26T08:15:57.066Z</published>
    <updated>2020-09-12T12:55:52.436Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="VUE-双向数据绑定"><a href="#VUE-双向数据绑定" class="headerlink" title="VUE 双向数据绑定"></a>VUE 双向数据绑定</h1><blockquote><p>所谓双向数据绑定就是视图元素变化会引发 view=&gt;model 中对应的数据改变，反过来 model=&gt;view 中数据发生变化也会引起视图更新</p></blockquote><h3 id="1-从-view-到-model"><a href="#1-从-view-到-model" class="headerlink" title="1. 从 view 到 model:"></a>1. 从 view 到 model:</h3><ul><li>采用 dom 事件绑定实现</li></ul><h3 id="2-从-model-到-view"><a href="#2-从-model-到-view" class="headerlink" title="2. 从 model 到 view:"></a>2. 从 model 到 view:</h3><ul><li>angular 脏数据检查：通过脏值检测（定时器轮询）的方式比对数据是否有变更来决定是否更新视图，能兼容 ie8 但性能比较低</li><li>vue2.0 中运用到了 ES5 中 Object.defineProperty（obj, prop, descriptor）数据劫持的方式</li><li>vue3.0 中运用到了 ES6 中 Proxy（target, handler）数据代理的方式</li></ul><h4 id="1-Object-defineProperty（obj-prop-descriptor）数据劫持"><a href="#1-Object-defineProperty（obj-prop-descriptor）数据劫持" class="headerlink" title="1. Object.defineProperty（obj, prop, descriptor）数据劫持"></a>1. Object.defineProperty（obj, prop, descriptor）数据劫持</h4><blockquote><ol><li>obj: 要定义属性的对象</li><li>prop: 要定义或修改的属性的名称或 Symbol</li><li>descriptor: 要定义或修改的属性描述符</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type &#x3D; &#39;text&#39;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;!--view &#x3D;&gt; model--&gt;</span><br><span class="line"></span><br><span class="line">    const input &#x3D; document.querySelector（&#39;input&#39;）</span><br><span class="line">    input.addEventListener（&#39;input&#39;，function（）&#123;</span><br><span class="line">        data.msg &#x3D; this.value</span><br><span class="line">    &#125;）</span><br><span class="line">    const data &#x3D; &#123;</span><br><span class="line">        msg: &#39;hello&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;!--model &#x3D;&gt; view--&gt;</span><br><span class="line"></span><br><span class="line">    let temp &#x3D; data.msg</span><br><span class="line">    input.value &#x3D; msg</span><br><span class="line">    &lt;!--data--数据对象；&#39;msg&#39;--劫持的属性名--&gt;</span><br><span class="line">    &lt;!--get（）：读取劫持属性时触发，get中要有返回值--&gt;</span><br><span class="line">    &lt;!--set（）：设置劫持的属性值时触发--&gt;</span><br><span class="line">    Object.defineProperty（data, &#39;msg&#39;, &#123;</span><br><span class="line">        get（）&#123;</span><br><span class="line">            return msg</span><br><span class="line">        &#125;，</span><br><span class="line">        set（value）&#123;</span><br><span class="line">            msg &#x3D; value</span><br><span class="line">            input.value &#x3D; value</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;）</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h6 id="Object-defineProperty（）数据劫持的缺点："><a href="#Object-defineProperty（）数据劫持的缺点：" class="headerlink" title="Object.defineProperty（）数据劫持的缺点："></a>Object.defineProperty（）数据劫持的缺点：</h6><ul><li>无法监控数组下标的变化，需要通过 push（）、shift（）等方法来实现数组变动</li><li>只能劫持对象的属性，需要对每个对象的每个属性进行遍历来实现对数据的监控</li><li>并且需要通过递归和遍历 data 对象来实现深度遍历，如果属性值也是对象也需要深度遍历</li></ul><h4 id="Proxy（target-handler）数据代理"><a href="#Proxy（target-handler）数据代理" class="headerlink" title="Proxy（target, handler）数据代理"></a>Proxy（target, handler）数据代理</h4><blockquote><ol><li>target: 需要使用 Proxy 包装的目标对象（可以是任何类型的对象，包括原生数组，函数，甚至另一个代理）</li><li>handler: 一个对象，其属性是当执行一个操作时定义代理的行为的函数（可以理解为某种触发器）</li><li>可以监听（劫持）多个属性，而且可以监听（劫持）到新添加的属性</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;&#39;text&#39;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    &lt;!--view &#x3D;&gt; model--&gt;</span><br><span class="line"></span><br><span class="line">    const input &#x3D; document.querySelector（&#39;input&#39;）</span><br><span class="line">    input.addEventListener（&#39;input&#39;, function（）&#123;</span><br><span class="line">        obj.msg &#x3D; this.value</span><br><span class="line">    &#125;)</span><br><span class="line">    const data &#x3D; &#123;</span><br><span class="line">        msg: &#39;hello&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;!--model &#x3D;&gt; view--&gt;</span><br><span class="line"></span><br><span class="line">    input.value &#x3D; data.msg</span><br><span class="line">    const obj &#x3D; new proxy（data, &#123;</span><br><span class="line">        get（target, key）&#123;</span><br><span class="line">            return target[key]</span><br><span class="line">        &#125;，</span><br><span class="line">        set（target, key, value）&#123;</span><br><span class="line">            target[key] &#x3D; value</span><br><span class="line">            input.value &#x3D; value</span><br><span class="line">        &#125;，</span><br><span class="line">    &#125;）</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="vue基础" scheme="http://guhaijian.github.io/tags/vue%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>MVC、MVP、MVVM架构模式</title>
    <link href="http://guhaijian.github.io/2020/07/23/MVC%E3%80%81MVP%E3%80%81MVVM%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/"/>
    <id>http://guhaijian.github.io/2020/07/23/MVC%E3%80%81MVP%E3%80%81MVVM%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-07-23T03:41:23.660Z</published>
    <updated>2020-09-12T12:56:38.196Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="MVC、MVP、MVVM-架构模式"><a href="#MVC、MVP、MVVM-架构模式" class="headerlink" title="MVC、MVP、MVVM 架构模式"></a>MVC、MVP、MVVM 架构模式</h1><blockquote><p>发展历程：MVC =&gt; MVP =&gt; MVVM</p></blockquote><h3 id="MVC-模式"><a href="#MVC-模式" class="headerlink" title="MVC 模式"></a>MVC 模式</h3><ul><li>View: 用户界面<ul><li>提供界面工用户交互</li><li>展示模型数据</li></ul></li><li>Controller: 控制器<ul><li>接收请求</li><li>委托模型处理</li><li>选择对应视图</li><li>转发模型返回的数据</li></ul></li><li>Model: 业务模型<ul><li>保存数据</li><li>修改数据</li><li>查询数据</li></ul></li></ul><blockquote><p>主要逻辑：View 触发事件，Controller 响应并处理逻辑，调用 Model，Model 处理完成后将数据发送给 View,View 更新</p></blockquote><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/MVVM/MVC%E6%A8%A1%E5%BC%8F.jpg" alt=""></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/MVVM/MVC%E5%9B%BE%E8%A7%A3.jpg" alt=""></p><h3 id="MVP-模式"><a href="#MVP-模式" class="headerlink" title="MVP 模式"></a>MVP 模式</h3><blockquote><ol><li>MVP 模式中将 Controller 改名为 presenter,同时改变通信方向</li><li>MVP 模式中 View 和 Model 不发生联系，以 Presenter 为核心，负责从 Model 获取数据，并填充到 View 中，因此 View 被也被称为“被动视图”，暴露出 setter 接口</li></ol></blockquote><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/MVVM/MVP%E6%A8%A1%E5%BC%8F.jpg" alt=""></p><h3 id="MVVM-模式"><a href="#MVVM-模式" class="headerlink" title="MVVM 模式"></a>MVVM 模式</h3><blockquote><ol><li>传统的前端会将数据手动渲染到页面上,MVVM 模式不需要用户手动操作 dom 元素，会将数据绑定到 viewModel 层上，会自动将数据渲染到页面中，视图变化会通知 viewModel 层更新数据。ViewModel 就是我们 MVVM 模式中的桥梁</li><li>该模型中，View 与 VM 保持同步，View 绑定到 VM 的属性上，如果 VM 数据发生变化，通过数据绑定的方式，View 会自动更新视图；VM 同样也暴露出 Model 中的数据</li></ol></blockquote><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/MVVM/MVVM%E6%A8%A1%E5%BC%8F.jpg" alt=""></p><p><img src= "/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/guhaijian/Image/MVVM/MVVM%E5%9B%BE%E8%A7%A3.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="前端技术" scheme="http://guhaijian.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web前端" scheme="http://guhaijian.github.io/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
